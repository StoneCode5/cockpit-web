{"version":3,"sources":["components/DashBoard/Container/index.tsx","../node_modules/@ant-design/charts/es/plots/mix/index.js","components/Column2/index.tsx","components/DashBoard/withContainer.tsx"],"names":["Container","props","children","attr","id","x","y","w","h","deg","opacity","styles","width","height","left","top","transform","style","className","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","MultiViewChart","forwardRef","ref","chartRef","_a","loading","loadingTemplate","errorTemplate","rest","_b","useChart","G2plotMix","chart","container","useEffect","getChart","current","useImperativeHandle","React","createElement","ErrorBoundary","ChartLoading","WithContainer","data","useState","maxValue","setMaxValue","maxBy","value","config","tooltip","show","views","region","start","end","axes","label","fill","line","stroke","tickLine","subTickLine","grid","coordinate","cfg","isTransposed","meta","formatter","v","slice","max","Math","ceil","geometries","type","xField","yField","tooltipFields","mapping","map","fillOpacity","position","offset","a","b","c","WrappedComponent","ComponentConfig","cacheRepeatRequest","source","componentData"],"mappings":"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","file":"static/js/17.12b58b46.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Attr {\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    deg: number;\r\n    opacity: number;\r\n}\r\n\r\ninterface Props {\r\n    attr: Attr\r\n    id: string\r\n}\r\n\r\nconst Container: React.FC<Props> = (props) => {\r\n  const {children, attr, id} = props;\r\n  const {x , y , w , h, deg, opacity} = attr\r\n\r\n  const styles = {\r\n      width: w || 0,\r\n      height: h || 0,\r\n      left: x || 0,\r\n      top: y ||0 ,\r\n      transform: `rotate(${deg || 0}deg)`,\r\n      opacity: opacity || 1,\r\n  }\r\n  \r\n  return <div style={styles} className=\"absolute\" data-id={id}>\r\n      {children}\r\n  </div>;\r\n};\r\n\r\nexport default Container;","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { Mix as G2plotMix } from '@antv/g2plot';\nimport useChart from '../../hooks/useChart';\nimport { getChart } from '../../util';\nimport { ErrorBoundary } from '../../base';\nimport ChartLoading from '../../util/createLoading';\nvar MultiViewChart = forwardRef(function (props, ref) {\n    var chartRef = props.chartRef, _a = props.style, style = _a === void 0 ? {\n        height: 'inherit',\n    } : _a, className = props.className, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate, rest = __rest(props, [\"chartRef\", \"style\", \"className\", \"loading\", \"loadingTemplate\", \"errorTemplate\"]);\n    var _b = useChart(G2plotMix, rest), chart = _b.chart, container = _b.container;\n    useEffect(function () {\n        getChart(chartRef, chart.current);\n    }, [chart.current]);\n    useImperativeHandle(ref, function () { return ({\n        getChart: function () { return chart.current; },\n    }); });\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n});\nexport default MultiViewChart;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Mix } from \"@ant-design/charts\";\r\nimport { maxBy } from \"lodash\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\n\r\ninterface DataItem {\r\n  label: string;\r\n  value: number;\r\n}\r\n\r\nconst ColumnComponent: React.FC = (props: any) => {\r\n  const { data = [] } = props;\r\n  const [maxValue, setMaxValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setMaxValue(maxBy(data, \"value\").value);\r\n  }, [data]);\r\n\r\n  var config = {\r\n    tooltip: { show: false },\r\n    views: [\r\n      {\r\n        region: {\r\n          start: {\r\n            x: 0,\r\n            y: 0,\r\n          },\r\n          end: {\r\n            x: 0.85,\r\n            y: 1,\r\n          },\r\n        },\r\n        data,\r\n        axes: {\r\n          label: {\r\n            label: {\r\n              style: {\r\n                fill: 'rgba(255, 255, 255, 0.4)'\r\n              }\r\n            },\r\n            line: {\r\n              style: {\r\n                stroke: 'rgba(255, 255, 255, 0.1)'\r\n              }\r\n            },\r\n            tickLine: null,\r\n            subTickLine: null,\r\n          },\r\n          value: {\r\n            label: {\r\n              style: {\r\n                fill: 'rgba(255, 255, 255, 0.4)'\r\n              }\r\n            },\r\n            line: null,\r\n            grid: {\r\n              line: {\r\n                style: {\r\n                  stroke: 'rgba(255, 255, 255, 0.1)',\r\n                }\r\n              }\r\n            }\r\n          },\r\n        },\r\n        coordinate: { cfg: { isTransposed: true } },\r\n        meta: {\r\n          label: {\r\n            formatter: function (v: string) {\r\n              return v.slice(0, 2);\r\n            },\r\n          },\r\n          value: {\r\n            max: Math.ceil((maxValue * 3.6) / 3),\r\n          },\r\n        },\r\n        geometries: [\r\n          {\r\n            type: \"interval\",\r\n            xField: \"label\",\r\n            yField: \"value\",\r\n            tooltipFields: false,\r\n            mapping: {\r\n              style: {\r\n                fill: \"l(0) 0:#FF7E11 1:#F99A13\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        region: {\r\n          start: {\r\n            x: 0,\r\n            y: 0,\r\n          },\r\n          end: {\r\n            x: 1,\r\n            y: 0.95,\r\n          },\r\n        },\r\n        data: data.map((v: DataItem) => ({\r\n          ...v,\r\n          value: maxValue,\r\n        })),\r\n        axes: {\r\n          value: false,\r\n          label: false,\r\n        },\r\n        meta: {\r\n          value: {\r\n            max: Math.ceil((maxValue * 3.6) / 3),\r\n          },\r\n        },\r\n        coordinate: { cfg: { isTransposed: true } },\r\n        geometries: [\r\n          {\r\n            type: \"interval\",\r\n            xField: \"label\",\r\n            yField: \"value\",\r\n            tooltipFields: false,\r\n            mapping: {\r\n              style: {\r\n                fillOpacity: 0,\r\n              },\r\n            },\r\n            label: {\r\n              position: \"right\" as const,\r\n              offset: 30,\r\n              style: {\r\n                fill: \"#FF9E0D\",\r\n              },\r\n              // @ts-ignore\r\n              formatter: function formatter(a, b, c) {\r\n                return data[c].value\r\n              }\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  // @ts-ignore\r\n  return <Mix {...config} />;\r\n};\r\n\r\nexport default WithContainer(ColumnComponent);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport request from \"../../utils/request\";\r\nimport { RequestThrottle } from \"./utils\";\r\n\r\ninterface Props {\r\n  config: DashBoard.Layer;\r\n  cacheRepeatRequest: boolean \r\n}\r\n\r\nexport function WithContainer(WrappedComponent: any) {\r\n  const ContainerFC: React.FC<Props> = (props) => {\r\n    const { config, cacheRepeatRequest } = props;\r\n    const {\r\n      config: ComponentConfig,\r\n      attr,\r\n      data,\r\n      data: { source },\r\n      id,\r\n    } = config;\r\n\r\n    const [componentData, setComponentData] = useState(source);\r\n    // useEffect(() => {\r\n    //   // 这一层去改变数据\r\n    //   const { autoUpdate, api = { url: \"\", method: \"get\", staleTime: 5 * 1000, handleRes: (res:any) => res } } = data;\r\n    //   const { url, method, staleTime, handleRes } = api;\r\n\r\n    //   const appendRequest = (RequestThrottle:any) => {\r\n    //     RequestThrottle.appendUrl(url);\r\n    //     request[method](url).then((res) => {\r\n    //       if (res.code === \"00000\") {\r\n    //         RequestThrottle.updateUrlRes(url, res);\r\n    //         const cData = handleRes? handleRes(res.data) : res.data\r\n    //         setComponentData(cData);\r\n    //       }\r\n    //     });\r\n    //   }\r\n\r\n    //   if (autoUpdate && typeof autoUpdate === \"number\") {\r\n    //     const id = setInterval(() => {\r\n    //       if (cacheRepeatRequest) {\r\n    //         const requestUrl = RequestThrottle.getUrlFromUrls(url);\r\n    //         // 有正在请求的相同的请求\r\n    //         if (requestUrl) {\r\n    //           //请求中\r\n    //           if (requestUrl.status === \"pendding\") {\r\n    //             RequestThrottle.subscribe(url, (res: any) => {\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             });\r\n    //           } else {\r\n    //             // 有请求成功的相同请求\r\n    //             const cha = new Date().getTime() - requestUrl.startTime;\r\n    //             // 该请求还未过有效期\r\n    //             if (cha >= staleTime) {\r\n    //               appendRequest(RequestThrottle)\r\n    //             } else {\r\n    //               // 过了有效期 重新发起请求\r\n    //               const { res } = requestUrl;\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             }\r\n    //           }\r\n    //         } else {\r\n    //           // 之前没有过相同的请求\r\n    //           appendRequest(RequestThrottle)\r\n    //         }\r\n    //       } else {\r\n    //         request[method](url).then((res) => {\r\n    //           if (res.code === \"00000\") {\r\n    //             const cData = handleRes? handleRes(res.data) : res.data\r\n    //             setComponentData(cData);\r\n    //           }\r\n    //         });\r\n    //       }\r\n    //     }, autoUpdate);\r\n\r\n    //     return () => {\r\n    //       clearInterval(id);\r\n    //     };\r\n    //   }\r\n    // }, []);\r\n\r\n    return (\r\n      <Container attr={attr} id={id}>\r\n        <WrappedComponent {...ComponentConfig} data={componentData} />\r\n      </Container>\r\n    );\r\n  };\r\n  return ContainerFC;\r\n}\r\n"],"sourceRoot":""}