{"version":3,"sources":["components/DashBoard/Container/index.tsx","components/Column3/index.tsx","components/DashBoard/withContainer.tsx"],"names":["Container","props","children","attr","id","x","y","w","h","deg","opacity","styles","width","height","left","top","transform","style","className","WithContainer","data","defaultOption","tooltip","trigger","axisPointer","type","legend","right","textStyle","color","grid","bottom","containLabel","xAxis","axisLabel","show","splitLine","lineStyle","yAxis","axisTick","series","name","stack","label","position","offset","fontSize","emphasis","focus","barWidth","itemStyle","barBorderRadius","echarts","LinearGradient","useEffect","element","document","getElementById","myChart","option","setOption","WrappedComponent","config","cacheRepeatRequest","ComponentConfig","source","useState","componentData","setComponentData","autoUpdate","api","url","method","staleTime","handleRes","res","appendRequest","RequestThrottle","appendUrl","request","then","code","updateUrlRes","cData","setInterval","requestUrl","getUrlFromUrls","status","subscribe","Date","getTime","startTime","clearInterval"],"mappings":"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","file":"static/js/18.3191701a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Attr {\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    deg: number;\r\n    opacity: number;\r\n}\r\n\r\ninterface Props {\r\n    attr: Attr\r\n    id: string\r\n}\r\n\r\nconst Container: React.FC<Props> = (props) => {\r\n  const {children, attr, id} = props;\r\n  const {x , y , w , h, deg, opacity} = attr\r\n\r\n  const styles = {\r\n      width: w || 0,\r\n      height: h || 0,\r\n      left: x || 0,\r\n      top: y ||0 ,\r\n      transform: `rotate(${deg || 0}deg)`,\r\n      opacity: opacity || 1,\r\n  }\r\n  \r\n  return <div style={styles} className=\"absolute\" data-id={id}>\r\n      {children}\r\n  </div>;\r\n};\r\n\r\nexport default Container;","import React, { useEffect } from \"react\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\nimport * as echarts from \"echarts\";\r\n\r\nconst Column3: React.FC<any> = (props) => {\r\n  const { data } = props;\r\n\r\n  const defaultOption = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        // Use axis to trigger tooltip\r\n        type: \"shadow\", // 'shadow' as default; can also be 'line' or 'shadow'\r\n      },\r\n    },\r\n    legend: {\r\n      right: \"0\",\r\n      textStyle: {\r\n        color: \"#C9EAFF\",\r\n      },\r\n    },\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"0%\",\r\n      top: \"10%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"value\",\r\n      axisLabel: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        show: true,\r\n        lineStyle: {\r\n          color: \"rgba(255, 255, 255, 0.1)\",\r\n          type: \"dashed\",\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"category\",\r\n      data: data[0],\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"A类\",\r\n        type: \"bar\",\r\n        stack: \"total\",\r\n        label: {\r\n          show: true,\r\n          position: \"insideTopRight\",\r\n          offset: [3, -16],\r\n          color: \"#5D80FF\",\r\n          fontSize: 11,\r\n        },\r\n        emphasis: {\r\n          focus: \"series\",\r\n        },\r\n        data: data[1],\r\n        barWidth: 5,\r\n        itemStyle: {\r\n          barBorderRadius: 3,\r\n          color: new echarts.graphic.LinearGradient(1, 0, 0, 0, [\r\n            { offset: 0, color: \"rgba(93,128,255,0.80)\" },\r\n            { offset: 1, color: \"rgba(93,128,255,0.10)\" },\r\n          ]),\r\n        },\r\n      },\r\n      {\r\n        name: \"B类\",\r\n        type: \"bar\",\r\n        stack: \"total\",\r\n        label: {\r\n          show: true,\r\n          position: \"insideTopRight\",\r\n          offset: [3, -16],\r\n          color: \"#9EFFF9\",\r\n          fontSize: 11,\r\n        },\r\n        emphasis: {\r\n          focus: \"series\",\r\n        },\r\n        data: data[2],\r\n        barWidth: 5,\r\n        itemStyle: {\r\n          barBorderRadius: 3,\r\n          color: new echarts.graphic.LinearGradient(1, 0, 0, 0, [\r\n            { offset: 0, color: \"rgba(158,255,249,0.80)\" },\r\n            { offset: 1, color: \"rgba(101,255,241,0.10)\" },\r\n          ]),\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(\"column3\");\r\n    let myChart = echarts.init(element as HTMLDivElement);\r\n    let option = defaultOption;\r\n    myChart.setOption(option);\r\n  });\r\n\r\n  return <div id={\"column3\"} style={{ width: \"100%\", height: \"100%\" }} />;\r\n};\r\n\r\nexport default WithContainer(Column3);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport request from \"../../utils/request\";\r\nimport { RequestThrottle } from \"./utils\";\r\n\r\ninterface Props {\r\n  config: DashBoard.Layer;\r\n  cacheRepeatRequest: boolean \r\n}\r\n\r\nexport function WithContainer(WrappedComponent: any) {\r\n  const ContainerFC: React.FC<Props> = (props) => {\r\n    const { config, cacheRepeatRequest } = props;\r\n    const {\r\n      config: ComponentConfig,\r\n      attr,\r\n      data,\r\n      data: { source },\r\n      id,\r\n    } = config;\r\n\r\n    const [componentData, setComponentData] = useState(source);\r\n    useEffect(() => {\r\n      // 这一层去改变数据\r\n      const { autoUpdate, api = { url: \"\", method: \"get\", staleTime: 5 * 1000, handleRes: (res:any) => res } } = data;\r\n      const { url, method, staleTime, handleRes } = api;\r\n\r\n      const appendRequest = (RequestThrottle:any) => {\r\n        RequestThrottle.appendUrl(url);\r\n        request[method](url).then((res) => {\r\n          if (res.code === \"00000\") {\r\n            RequestThrottle.updateUrlRes(url, res);\r\n            const cData = handleRes? handleRes(res.data) : res.data\r\n            setComponentData(cData);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (autoUpdate && typeof autoUpdate === \"number\") {\r\n        const id = setInterval(() => {\r\n          if (cacheRepeatRequest) {\r\n            const requestUrl = RequestThrottle.getUrlFromUrls(url);\r\n            // 有正在请求的相同的请求\r\n            if (requestUrl) {\r\n              //请求中\r\n              if (requestUrl.status === \"pendding\") {\r\n                RequestThrottle.subscribe(url, (res: any) => {\r\n                  if (res.code === \"00000\") {\r\n                    const cData = handleRes? handleRes(res.data) : res.data\r\n                    setComponentData(cData);\r\n                  }\r\n                });\r\n              } else {\r\n                // 有请求成功的相同请求\r\n                const cha = new Date().getTime() - requestUrl.startTime;\r\n                // 该请求还未过有效期\r\n                if (cha >= staleTime) {\r\n                  appendRequest(RequestThrottle)\r\n                } else {\r\n                  // 过了有效期 重新发起请求\r\n                  const { res } = requestUrl;\r\n                  if (res.code === \"00000\") {\r\n                    const cData = handleRes? handleRes(res.data) : res.data\r\n                    setComponentData(cData);\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              // 之前没有过相同的请求\r\n              appendRequest(RequestThrottle)\r\n            }\r\n          } else {\r\n            request[method](url).then((res) => {\r\n              if (res.code === \"00000\") {\r\n                const cData = handleRes? handleRes(res.data) : res.data\r\n                setComponentData(cData);\r\n              }\r\n            });\r\n          }\r\n        }, autoUpdate);\r\n\r\n        return () => {\r\n          clearInterval(id);\r\n        };\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <Container attr={attr} id={id}>\r\n        <WrappedComponent {...ComponentConfig} data={componentData} />\r\n      </Container>\r\n    );\r\n  };\r\n  return ContainerFC;\r\n}\r\n"],"sourceRoot":""}