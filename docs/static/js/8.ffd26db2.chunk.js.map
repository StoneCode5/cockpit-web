{"version":3,"sources":["components/MapV5/index.tsx","components/MapV5/marker.tsx","components/MapV5/southSea.svg"],"names":["echarts","TitleComponent","ToolboxComponent","TooltipComponent","VisualMapComponent","GeoComponent","MapChart","CanvasRenderer","ScatterChart","EffectScatterChart","WithContainer","props","map","useRef","provinceDataOrign","data","config","height","width","provinceData","filter","item","name","sort","a","b","localeCompare","useEffect","option","chartDom","current","myChart","chineseMap","computedAreaColor","val","linearRed","LinearGradient","offset","color","linearOrange","linearBlue","linearCyan","COLOR","AREA_DEFAULT","BORDER_DEFAULT","AREA_MARKED","BORDER_MARKED","AREA_ACTIVE","geo","itemStyle","borderColor","areaColor","label","show","series","type","mapType","emphasis","i","length","element","parseFloat","value","handleProvinceData","nameMap","广东省","云南省","海南省","四川省","江西省","湖北省","山东省","安徽省","广西壮族自治区","贵州省","上海市","河南省","陕西省","河北省","setOption","init","ref","style","background","position","top","right","src","southSeaImg","alt","transform","Marker","colors","className","text","index","backgroundColor"],"mappings":"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","file":"static/js/8.ffd26db2.chunk.js","sourcesContent":["// @ts-nocheck\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport \"./index.less\";\r\nimport * as echarts from \"echarts/core\";\r\nimport {\r\n  TitleComponent,\r\n  ToolboxComponent,\r\n  TooltipComponent,\r\n  VisualMapComponent,\r\n  GeoComponent,\r\n} from \"echarts/components\";\r\nimport { MapChart, ScatterChart, EffectScatterChart } from \"echarts/charts\";\r\nimport { CanvasRenderer } from \"echarts/renderers\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\nimport { chineseMap } from \"../../assets/chinese.js\";\r\nimport { getCsvNumber } from \"../../utils/utils\";\r\nimport Pointer from \"./pointer\";\r\nimport Marker from './marker'\r\n// const southSeaImg = require(\"\");\r\nimport southSeaImg from \"./southSea.svg\";\r\n\r\necharts.use([\r\n  TitleComponent,\r\n  ToolboxComponent,\r\n  TooltipComponent,\r\n  VisualMapComponent,\r\n  GeoComponent,\r\n  MapChart,\r\n  CanvasRenderer,\r\n  ScatterChart,\r\n  EffectScatterChart,\r\n]);\r\n\r\nconst Map = (props) => {\r\n  const map = useRef(null);\r\n  const {\r\n    data: provinceDataOrign,\r\n    config: { height, width },\r\n  } = props;\r\n  const provinceData = provinceDataOrign\r\n    .filter((item) => item.name !== \"深圳分公司\")\r\n    .sort((a, b) => a.name.localeCompare(b.name));\r\n  const init = () => {\r\n    const BORDER_COLOR = \"#2F5F91\";\r\n    var chartDom = map.current;\r\n    var myChart = echarts.init(chartDom);\r\n    var option;\r\n    echarts.registerMap(\"China\", chineseMap);\r\n\r\n    // var data = [\r\n    //   {\r\n    //     name: \"广东分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"云南分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"海南分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"四川分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"湖北分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"江西分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"山东分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"广西分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"贵州分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"深圳分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"上海分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"河南分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"陕西分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"河北分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    // ];\r\n\r\n    // var geoCoordMap = {\r\n    //   广东分公司: [113.34, 23.13],\r\n    //   云南分公司: [102.72, 25.04],\r\n    //   海南分公司: [110.31, 20.03],\r\n    //   四川分公司: [104.04, 30.63],\r\n    //   湖北分公司: [114.34, 30.56],\r\n    //   江西分公司: [115.85, 28.7],\r\n    //   山东分公司: [117.07, 36.68],\r\n    //   安徽分公司: [117.32, 31.87],\r\n    //   广西分公司: [108.37, 22.83],\r\n    //   贵州分公司: [106.72, 26.57],\r\n    //   深圳分公司: [114.11, 22.56],\r\n    //   上海分公司: [121.37, 31.12],\r\n    //   河南分公司: [113.76, 34.77],\r\n    //   陕西分公司: [108.89, 34.22],\r\n    //   河北分公司: [114.56, 38.02],\r\n    // };\r\n\r\n    // const provinceData = [\r\n    //   { name: \"广东省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"云南省\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"海南省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"四川省\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"江西省\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"湖北省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"山东省\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"安徽省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"广西壮族自治区\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"贵州省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"上海市\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"河南省\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"陕西省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"河北省\", value: 2000, value1: 100, value2: 100 },\r\n    // ];\r\n\r\n    const nameMap = {\r\n      广东省: \"广东分公司\",\r\n      云南省: \"云南分公司\",\r\n      海南省: \"海南分公司\",\r\n      四川省: \"四川分公司\",\r\n      江西省: \"江西分公司\",\r\n      湖北省: \"湖北分公司\",\r\n      山东省: \"山东分公司\",\r\n      安徽省: \"安徽分公司\",\r\n      广西壮族自治区: \"广西分公司\",\r\n      贵州省: \"贵州分公司\",\r\n      上海市: \"上海分公司\",\r\n      河南省: \"河南分公司\",\r\n      陕西省: \"陕西分公司\",\r\n      河北省: \"河北分公司\",\r\n    };\r\n\r\n    // var convertData = function (data) {\r\n    //   var res = [];\r\n    //   for (var i = 0; i < data.length; i++) {\r\n    //     var geoCoord = geoCoordMap[data[i].name];\r\n    //     if (geoCoord) {\r\n    //       res.push({\r\n    //         name: data[i].name,\r\n    //         value: geoCoord.concat(data[i].value),\r\n    //       });\r\n    //     }\r\n    //   }\r\n    //   return res;\r\n    // };\r\n\r\n    const computedAreaColor = (val: number) => {\r\n      const linearRed = new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n        { offset: 0, color: \"#CD545C\" },\r\n        { offset: 1, color: \"#221A3F\" },\r\n      ])\r\n\r\n      const linearOrange = new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n        { offset: 0, color: \"#F99912\" },\r\n        { offset: 1, color: \"#212237\" },\r\n      ])\r\n      \r\n      const linearBlue = new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n        { offset: 0, color: \"#4965D1\" },\r\n        { offset: 1, color: \"#0F1C45\" },\r\n      ])\r\n\r\n      const linearCyan = new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n        { offset: 0, color: \"#7CCBCF\" },\r\n        { offset: 1, color: \"#122C4E\" },\r\n      ])\r\n\r\n      switch (true) {\r\n        case val > 105:\r\n          return linearRed ;\r\n        case val >= 100 && val <= 105:\r\n          return linearOrange;\r\n        case val >= 95 && val <= 100:\r\n          return linearBlue\r\n        case val <= 95:\r\n          return linearCyan;\r\n        default:\r\n          return linearCyan;\r\n      }\r\n    };\r\n\r\n    const handleProvinceData = (data: any[]) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        const element = data[i];\r\n        \r\n        data[i] = {\r\n          ...element,\r\n          // 有数据的省份的颜色\r\n          itemStyle: {\r\n            borderColor: COLOR.BORDER_MARKED,\r\n            areaColor: computedAreaColor(parseFloat(element.value, 10)),\r\n            // areaColor: COLOR.BORDER_MARKED,\r\n            // areaColor: '#111111',\r\n            // areaColor: \"#093871 #164390\",\r\n          },\r\n        };\r\n      }\r\n      return data;\r\n    };\r\n\r\n    const COLOR = {\r\n      AREA_DEFAULT: \"#0D1A49\", // 区域默认颜色\r\n      BORDER_DEFAULT: \"#5D80FF\", // 区域边框默认颜色\r\n      // AREA_MARKED: '#FF9E0D', // 地图标注区域的颜色\r\n      AREA_MARKED: \"#05255A\", // 标注区域的颜色\r\n      // BORDER_MARKED: \"#2F5F91\", // 标注区域边框颜色\r\n      BORDER_MARKED: '#78BFE5',\r\n      AREA_ACTIVE: \"red\", // 选中区域颜色\r\n    };\r\n    option = {\r\n      geo: {\r\n        map: \"China\",\r\n        // 默认颜色\r\n        itemStyle: {\r\n          borderColor: COLOR.BORDER_DEFAULT,\r\n          areaColor: COLOR.AREA_DEFAULT,\r\n        },\r\n        label: {\r\n          show: false,\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: \"香港18区人口密度\",\r\n          type: \"map\",\r\n          mapType: \"China\", // 自定义扩展图表类型\r\n          label: {\r\n            show: false,\r\n          },\r\n          // 默认颜色\r\n          itemStyle: {\r\n            borderColor: COLOR.BORDER_DEFAULT,\r\n            areaColor: COLOR.AREA_DEFAULT,\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: false,\r\n            },\r\n            itemStyle: {\r\n              areaColor: COLOR.AREA_ACTIVE,\r\n            },\r\n          },\r\n          data: handleProvinceData(provinceData),\r\n          nameMap,\r\n        },\r\n        // {\r\n        //   name: \"Top 5\",\r\n        //   type: \"effectScatter\",\r\n        //   coordinateSystem: \"geo\",\r\n        //   data: convertData(data),\r\n        //   encode: {\r\n        //     value: 2,\r\n        //   },\r\n        //   symbolSize: 10,\r\n        //   showEffectOn: \"render\",\r\n        //   rippleEffect: {\r\n        //     brushType: \"stroke\",\r\n        //   },\r\n\r\n        //   hoverAnimation: true,\r\n        //   label: {\r\n        //     formatter: \"{b}\",\r\n        //     position: \"right\",\r\n        //     show: false,\r\n        //   },\r\n        //   itemStyle: {\r\n        //     color: \"#FF9E0D\",\r\n        //     shadowBlur: 10,\r\n        //     shadowColor: \"#333\",\r\n        //   },\r\n        //   zlevel: 1,\r\n        // },\r\n      ],\r\n    };\r\n\r\n    if (option && typeof option === \"object\") {\r\n      myChart.setOption(option);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={map}\r\n        style={{\r\n          height: `${height}px`,\r\n          width: `${width}px`,\r\n          background: \"transparent\",\r\n          // background: \"red\"\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          // top: `${height - 170}px`,\r\n          top: '223px',\r\n          right: \"186px\",\r\n        }}\r\n      >\r\n        <img src={southSeaImg} alt=\"南海\" style={{transform: 'scale(0.7)',}} width=\"72\" height=\"100\" />\r\n      </div>\r\n      <Marker />\r\n      <Pointer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WithContainer(Map);\r\n","import React from 'react';\r\nimport './marker.less'\r\n\r\nfunction Marker() {\r\n  const texts = ['成本率＞105%', '100%≤成本率≤105%', '95%≤成本率≤100%', '成本率＜95%']\r\n  const colors = ['#CD545C', '#F99912', '#4965D1', '#7CCBCF']\r\n  return (\r\n    <div className=\"mapMarkerContainer\">\r\n      {texts.map((text, index) => <div className=\"mapMarkerItem\">\r\n        <div className=\"mapMarkerItemColorBox\" style={{backgroundColor: colors[index]}} />\r\n        <div className=\"mapMarkerItemText\">{text}</div>\r\n      </div>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Marker;\r\n","export default __webpack_public_path__ + \"static/media/southSea.9a4bb11a.svg\";"],"sourceRoot":""}