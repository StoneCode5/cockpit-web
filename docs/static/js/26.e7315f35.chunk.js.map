{"version":3,"sources":["components/DashBoard/Container/index.tsx","../node_modules/@ant-design/charts/es/plots/pie/index.js","components/Pie/index.tsx","components/DashBoard/withContainer.tsx"],"names":["Container","props","children","attr","id","x","y","w","h","deg","opacity","styles","width","height","left","top","transform","style","className","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","PieChart","forwardRef","ref","chartRef","_a","loading","loadingTemplate","errorTemplate","rest","_b","useChart","G2plotPie","chart","container","useEffect","getChart","current","useImperativeHandle","React","createElement","ErrorBoundary","ChartLoading","WithContainer","defaultData","type","value","defaultConfig","appendPadding","data","angleField","colorField","color","radius","innerRadius","label","offset","content","textAlign","fontSize","fill","legend","statistic","title","whiteSpace","overflow","textOverflow","formatter","config","WrappedComponent","ComponentConfig","cacheRepeatRequest","source","useState","componentData"],"mappings":"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","file":"static/js/26.e7315f35.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Attr {\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    deg: number;\r\n    opacity: number;\r\n}\r\n\r\ninterface Props {\r\n    attr: Attr\r\n    id: string\r\n}\r\n\r\nconst Container: React.FC<Props> = (props) => {\r\n  const {children, attr, id} = props;\r\n  const {x , y , w , h, deg, opacity} = attr\r\n\r\n  const styles = {\r\n      width: w || 0,\r\n      height: h || 0,\r\n      left: x || 0,\r\n      top: y ||0 ,\r\n      transform: `rotate(${deg || 0}deg)`,\r\n      opacity: opacity || 1,\r\n  }\r\n  \r\n  return <div style={styles} className=\"absolute\" data-id={id}>\r\n      {children}\r\n  </div>;\r\n};\r\n\r\nexport default Container;","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { Pie as G2plotPie } from '@antv/g2plot';\nimport useChart from '../../hooks/useChart';\nimport { getChart } from '../../util';\nimport { ErrorBoundary } from '../../base';\nimport ChartLoading from '../../util/createLoading';\nvar PieChart = forwardRef(function (props, ref) {\n    var chartRef = props.chartRef, _a = props.style, style = _a === void 0 ? {\n        height: 'inherit',\n    } : _a, className = props.className, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate, rest = __rest(props, [\"chartRef\", \"style\", \"className\", \"loading\", \"loadingTemplate\", \"errorTemplate\"]);\n    var _b = useChart(G2plotPie, rest), chart = _b.chart, container = _b.container;\n    useEffect(function () {\n        getChart(chartRef, chart.current);\n    }, [chart.current]);\n    useImperativeHandle(ref, function () { return ({\n        getChart: function () { return chart.current; },\n    }); });\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n});\nexport default PieChart;\n","import React from \"react\";\r\nimport { Pie } from \"@ant-design/charts\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\n\r\ninterface DataItem {\r\n  type: string;\r\n  value: number;\r\n}\r\n\r\ninterface Props {\r\n  config: any;\r\n  data: DataItem[];\r\n}\r\n\r\nconst PieComponent: React.FC<Props> = (props) => {\r\n  const defaultData = [\r\n    {\r\n      type: \"分类一\",\r\n      value: 42,\r\n    },\r\n    {\r\n      type: \"分类二\",\r\n      value: 58,\r\n    },\r\n  ];\r\n  const defaultConfig = {\r\n    appendPadding: 10,\r\n    data: defaultData,\r\n    angleField: \"value\",\r\n    colorField: \"type\",\r\n    color: ({ type }: DataItem) => {\r\n      if (type === \"分类二\") {\r\n        return \"#1F3357\";\r\n      }\r\n      return \"#FF9E0D\";\r\n    },\r\n    radius: 1,\r\n    innerRadius: 0.6,\r\n    label: {\r\n      type: \"inner\",\r\n      offset: \"-50%\",\r\n      content: \"{value}%\",\r\n      style: {\r\n        textAlign: \"center\",\r\n        fontSize: 18,\r\n        fill: \"#1F3357\",\r\n      },\r\n    },\r\n    legend: false,\r\n    statistic: {\r\n      title: false,\r\n      content: {\r\n        style: {\r\n          whiteSpace: \"pre-wrap\",\r\n          overflow: \"hidden\",\r\n          textOverflow: \"ellipsis\",\r\n          color: \"#FF9E0D\",\r\n        },\r\n        formatter: function formatter() {\r\n          return \"123,123.12\";\r\n        },\r\n      },\r\n    },\r\n  };\r\n  const { data = defaultData, config = defaultConfig } = props;\r\n\r\n  return <Pie {...config} data={data} />;\r\n};\r\n\r\nexport default WithContainer(PieComponent);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport request from \"../../utils/request\";\r\nimport { RequestThrottle } from \"./utils\";\r\n\r\ninterface Props {\r\n  config: DashBoard.Layer;\r\n  cacheRepeatRequest: boolean \r\n}\r\n\r\nexport function WithContainer(WrappedComponent: any) {\r\n  const ContainerFC: React.FC<Props> = (props) => {\r\n    const { config, cacheRepeatRequest } = props;\r\n    const {\r\n      config: ComponentConfig,\r\n      attr,\r\n      data,\r\n      data: { source },\r\n      id,\r\n    } = config;\r\n\r\n    const [componentData, setComponentData] = useState(source);\r\n    // useEffect(() => {\r\n    //   // 这一层去改变数据\r\n    //   const { autoUpdate, api = { url: \"\", method: \"get\", staleTime: 5 * 1000, handleRes: (res:any) => res } } = data;\r\n    //   const { url, method, staleTime, handleRes } = api;\r\n\r\n    //   const appendRequest = (RequestThrottle:any) => {\r\n    //     RequestThrottle.appendUrl(url);\r\n    //     request[method](url).then((res) => {\r\n    //       if (res.code === \"00000\") {\r\n    //         RequestThrottle.updateUrlRes(url, res);\r\n    //         const cData = handleRes? handleRes(res.data) : res.data\r\n    //         setComponentData(cData);\r\n    //       }\r\n    //     });\r\n    //   }\r\n\r\n    //   if (autoUpdate && typeof autoUpdate === \"number\") {\r\n    //     const id = setInterval(() => {\r\n    //       if (cacheRepeatRequest) {\r\n    //         const requestUrl = RequestThrottle.getUrlFromUrls(url);\r\n    //         // 有正在请求的相同的请求\r\n    //         if (requestUrl) {\r\n    //           //请求中\r\n    //           if (requestUrl.status === \"pendding\") {\r\n    //             RequestThrottle.subscribe(url, (res: any) => {\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             });\r\n    //           } else {\r\n    //             // 有请求成功的相同请求\r\n    //             const cha = new Date().getTime() - requestUrl.startTime;\r\n    //             // 该请求还未过有效期\r\n    //             if (cha >= staleTime) {\r\n    //               appendRequest(RequestThrottle)\r\n    //             } else {\r\n    //               // 过了有效期 重新发起请求\r\n    //               const { res } = requestUrl;\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             }\r\n    //           }\r\n    //         } else {\r\n    //           // 之前没有过相同的请求\r\n    //           appendRequest(RequestThrottle)\r\n    //         }\r\n    //       } else {\r\n    //         request[method](url).then((res) => {\r\n    //           if (res.code === \"00000\") {\r\n    //             const cData = handleRes? handleRes(res.data) : res.data\r\n    //             setComponentData(cData);\r\n    //           }\r\n    //         });\r\n    //       }\r\n    //     }, autoUpdate);\r\n\r\n    //     return () => {\r\n    //       clearInterval(id);\r\n    //     };\r\n    //   }\r\n    // }, []);\r\n\r\n    return (\r\n      <Container attr={attr} id={id}>\r\n        <WrappedComponent {...ComponentConfig} data={componentData} />\r\n      </Container>\r\n    );\r\n  };\r\n  return ContainerFC;\r\n}\r\n"],"sourceRoot":""}