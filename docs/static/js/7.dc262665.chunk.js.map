{"version":3,"sources":["components/DashBoard/Container/index.tsx","components/Round/index.tsx","components/DashBoard/withContainer.tsx","components/Round/round.tsx"],"names":["Container","props","children","attr","id","x","y","w","h","deg","opacity","styles","width","height","left","top","transform","style","className","WithContainer","data","config","map","item","index","WrappedComponent","cacheRepeatRequest","ComponentConfig","source","useState","componentData","setComponentData","useEffect","autoUpdate","api","url","method","staleTime","handleRes","res","appendRequest","RequestThrottle","appendUrl","request","then","code","updateUrlRes","cData","setInterval","requestUrl","getUrlFromUrls","status","subscribe","Date","getTime","startTime","clearInterval","defaultConfig","labelColor","labelSize","labelMargin","textColor","textSize","roundType","loopWidth","outerColor","insideColor","RoundItemComponent","label","value","current","setCurrent","setTimeout","animateValue","curr","fontSize","margin","String","replace"],"mappings":"4JAAA,uBAkCeA,UAlBoB,SAACC,GAClC,IAAOC,EAAsBD,EAAtBC,SAAUC,EAAYF,EAAZE,KAAMC,EAAMH,EAANG,GAChBC,EAA+BF,EAA/BE,EAAIC,EAA2BH,EAA3BG,EAAIC,EAAuBJ,EAAvBI,EAAIC,EAAmBL,EAAnBK,EAAGC,EAAgBN,EAAhBM,IAAKC,EAAWP,EAAXO,QAErBC,EAAS,CACXC,MAAOL,GAAK,EACZM,OAAQL,GAAK,EACbM,KAAMT,GAAK,EACXU,IAAKT,GAAI,EACTU,UAAU,UAAD,OAAYP,GAAO,EAAnB,QACTC,QAASA,GAAW,GAGxB,OAAO,qBAAKO,MAAON,EAAQO,UAAU,WAAW,UAASd,EAAlD,SACFF,M,gCC9BP,gDAeeiB,mCAX2B,SAAClB,GACzC,IAAQmB,EAAgBnB,EAAhBmB,KAAMC,EAAUpB,EAAVoB,OACd,OACE,qBAAKH,UAAU,OAAf,SACGE,GAAQA,EAAKE,KAAI,SAACC,EAAWC,GAAZ,OAChB,cAAC,UAAD,CAAWJ,KAAMG,EAAMF,OAAQA,EAAOG,IAAaA,Y,4ICCpD,SAASL,EAAcM,GAmF5B,OAlFqC,SAACxB,GACpC,IAAQoB,EAA+BpB,EAA/BoB,OAAQK,EAAuBzB,EAAvByB,mBAENC,EAKNN,EALFA,OACAlB,EAIEkB,EAJFlB,KACAiB,EAGEC,EAHFD,KACQQ,EAENP,EAFFD,KAAQQ,OACRxB,EACEiB,EADFjB,GAGF,EAA0CyB,mBAASD,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KAkEA,OAjEAC,qBAAU,WAER,IAAQC,EAAmGb,EAAnGa,WAAR,EAA2Gb,EAAvFc,WAApB,MAA0B,CAAEC,IAAK,GAAIC,OAAQ,MAAOC,UAAW,IAAUC,UAAW,SAACC,GAAD,OAAaA,IAAjG,EACQJ,EAAsCD,EAAtCC,IAAKC,EAAiCF,EAAjCE,OAAQC,EAAyBH,EAAzBG,UAAWC,EAAcJ,EAAdI,UAE1BE,EAAgB,SAACC,GACrBA,EAAgBC,UAAUP,GAC1BQ,IAAQP,GAAQD,GAAKS,MAAK,SAACL,GACzB,GAAiB,UAAbA,EAAIM,KAAkB,CACxBJ,EAAgBK,aAAaX,EAAKI,GAClC,IAAMQ,EAAQT,EAAWA,EAAUC,EAAInB,MAAQmB,EAAInB,KACnDW,EAAiBgB,QAKvB,GAAId,GAAoC,kBAAfA,EAAyB,CAChD,IAAM7B,EAAK4C,aAAY,WACrB,GAAItB,EAAoB,CACtB,IAAMuB,EAAaR,kBAAgBS,eAAef,GAElD,GAAIc,EAEF,GAA0B,aAAtBA,EAAWE,OACbV,kBAAgBW,UAAUjB,GAAK,SAACI,GAC9B,GAAiB,UAAbA,EAAIM,KAAkB,CACxB,IAAME,EAAQT,EAAWA,EAAUC,EAAInB,MAAQmB,EAAInB,KACnDW,EAAiBgB,YAOrB,IAFY,IAAIM,MAAOC,UAAYL,EAAWM,WAEnClB,EACTG,EAAcC,uBACT,CAEL,IAAQF,EAAQU,EAARV,IACR,GAAiB,UAAbA,EAAIM,KAAkB,CACxB,IAAME,EAAQT,EAAWA,EAAUC,EAAInB,MAAQmB,EAAInB,KACnDW,EAAiBgB,SAMvBP,EAAcC,wBAGhBE,IAAQP,GAAQD,GAAKS,MAAK,SAACL,GACzB,GAAiB,UAAbA,EAAIM,KAAkB,CACxB,IAAME,EAAQT,EAAWA,EAAUC,EAAInB,MAAQmB,EAAInB,KACnDW,EAAiBgB,SAItBd,GAEH,OAAO,WACLuB,cAAcpD,OAGjB,IAGD,cAAC,UAAD,CAAWD,KAAMA,EAAMC,GAAIA,EAA3B,SACE,cAACqB,EAAD,2BAAsBE,GAAtB,IAAuCP,KAAMU,U,gFCrF/C2B,EAAgB,CACpB7C,MAAO,GACP8C,WAAY,UACZC,UAAW,GACXC,YAAa,SACbC,UAAW,UACXC,SAAU,GACVC,UAAW,SACXC,UAAW,EACXC,WAAY,CAAC,UAAW,WACxBC,YAAa,CAAC,UAAW,YAyEZC,UAvE2B,SAAClE,GACzC,MAGIA,EAFFmB,YADF,MACS,CAAEgD,MAAO,eAAMC,MAAO,MAD/B,IAGIpE,EADFoB,cAFF,MAEWoC,EAFX,EAIA,EAA8B5B,mBAAiB,GAA/C,mBAAOyC,EAAP,KAAgBC,EAAhB,KAQA,OAPAvC,qBAAU,WACRwC,YAAW,WACTC,YAAaH,EAASlD,EAAKiD,OAAS,EAAG,KAAK,SAACK,GAC3CH,EAAWG,QAEZ,OACF,CAACtD,IAEF,sBAAKF,UAAU,OAAf,UACE,sBACED,MAAO,CACL0D,SAAS,GAAD,OAAKtD,EAAOsC,UAAZ,MAERiB,OAAQvD,EAAOuC,aAJnB,SAOGxC,EAAKgD,QAER,qBACElD,UAAU,aACVD,MAAO,CACLL,MAAM,GAAD,OAAKS,EAAOT,MAAZ,MACLC,OAAO,GAAD,OAAKQ,EAAOT,MAAZ,OAJV,SAiCE,qBACEK,MAAO,CACL0D,SAAUtD,EAAOyC,UAFrB,SAMGe,OAAOP,GAASQ,QAAQ,0BAA2B,gB","file":"static/js/7.dc262665.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Attr {\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    deg: number;\r\n    opacity: number;\r\n}\r\n\r\ninterface Props {\r\n    attr: Attr\r\n    id: string\r\n}\r\n\r\nconst Container: React.FC<Props> = (props) => {\r\n  const {children, attr, id} = props;\r\n  const {x , y , w , h, deg, opacity} = attr\r\n\r\n  const styles = {\r\n      width: w || 0,\r\n      height: h || 0,\r\n      left: x || 0,\r\n      top: y ||0 ,\r\n      transform: `rotate(${deg || 0}deg)`,\r\n      opacity: opacity || 1,\r\n  }\r\n  \r\n  return <div style={styles} className=\"absolute\" data-id={id}>\r\n      {children}\r\n  </div>;\r\n};\r\n\r\nexport default Container;","import React  from \"react\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\nimport \"./index.less\";\r\nimport RoundItem from \"./round\";\r\nconst RoundListComponent: React.FC<any> = (props) => {\r\n  const { data, config} = props;\r\n  return (\r\n    <div className=\"list\">\r\n      {data && data.map((item: any, index: number) => (\r\n        <RoundItem data={item} config={config[index]} key={index}></RoundItem>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithContainer(RoundListComponent);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport request from \"../../utils/request\";\r\nimport { RequestThrottle } from \"./utils\";\r\n\r\ninterface Props {\r\n  config: DashBoard.Layer;\r\n  cacheRepeatRequest: boolean \r\n}\r\n\r\nexport function WithContainer(WrappedComponent: any) {\r\n  const ContainerFC: React.FC<Props> = (props) => {\r\n    const { config, cacheRepeatRequest } = props;\r\n    const {\r\n      config: ComponentConfig,\r\n      attr,\r\n      data,\r\n      data: { source },\r\n      id,\r\n    } = config;\r\n\r\n    const [componentData, setComponentData] = useState(source);\r\n    useEffect(() => {\r\n      // 这一层去改变数据\r\n      const { autoUpdate, api = { url: \"\", method: \"get\", staleTime: 5 * 1000, handleRes: (res:any) => res } } = data;\r\n      const { url, method, staleTime, handleRes } = api;\r\n\r\n      const appendRequest = (RequestThrottle:any) => {\r\n        RequestThrottle.appendUrl(url);\r\n        request[method](url).then((res) => {\r\n          if (res.code === \"00000\") {\r\n            RequestThrottle.updateUrlRes(url, res);\r\n            const cData = handleRes? handleRes(res.data) : res.data\r\n            setComponentData(cData);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (autoUpdate && typeof autoUpdate === \"number\") {\r\n        const id = setInterval(() => {\r\n          if (cacheRepeatRequest) {\r\n            const requestUrl = RequestThrottle.getUrlFromUrls(url);\r\n            // 有正在请求的相同的请求\r\n            if (requestUrl) {\r\n              //请求中\r\n              if (requestUrl.status === \"pendding\") {\r\n                RequestThrottle.subscribe(url, (res: any) => {\r\n                  if (res.code === \"00000\") {\r\n                    const cData = handleRes? handleRes(res.data) : res.data\r\n                    setComponentData(cData);\r\n                  }\r\n                });\r\n              } else {\r\n                // 有请求成功的相同请求\r\n                const cha = new Date().getTime() - requestUrl.startTime;\r\n                // 该请求还未过有效期\r\n                if (cha >= staleTime) {\r\n                  appendRequest(RequestThrottle)\r\n                } else {\r\n                  // 过了有效期 重新发起请求\r\n                  const { res } = requestUrl;\r\n                  if (res.code === \"00000\") {\r\n                    const cData = handleRes? handleRes(res.data) : res.data\r\n                    setComponentData(cData);\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              // 之前没有过相同的请求\r\n              appendRequest(RequestThrottle)\r\n            }\r\n          } else {\r\n            request[method](url).then((res) => {\r\n              if (res.code === \"00000\") {\r\n                const cData = handleRes? handleRes(res.data) : res.data\r\n                setComponentData(cData);\r\n              }\r\n            });\r\n          }\r\n        }, autoUpdate);\r\n\r\n        return () => {\r\n          clearInterval(id);\r\n        };\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <Container attr={attr} id={id}>\r\n        <WrappedComponent {...ComponentConfig} data={componentData} />\r\n      </Container>\r\n    );\r\n  };\r\n  return ContainerFC;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./round.less\";\r\nimport { animateValue } from \"../../utils/utils\";\r\n\r\nconst defaultConfig = {\r\n  width: 80,\r\n  labelColor: \"#EFEFF1\",\r\n  labelSize: 14,\r\n  labelMargin: \"0 15px\",\r\n  textColor: \"#FEA406\",\r\n  textSize: 18,\r\n  roundType: \"double\", // single || double\r\n  loopWidth: 6,\r\n  outerColor: [\"#75F2FF\", \"#3BD3FF\"],\r\n  insideColor: [\"#FF6E76\", \"#FF808A\"],\r\n};\r\nconst RoundItemComponent: React.FC<any> = (props) => {\r\n  const {\r\n    data = { label: \"合计\", value: 2980 },\r\n    config = defaultConfig,\r\n  } = props;\r\n  const [current, setCurrent] = useState<number>(0);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      animateValue(current, data.value || 0, 500, (curr) => {\r\n        setCurrent(curr)\r\n      })\r\n    }, 1000);\r\n  }, [data]);\r\n  return (\r\n    <div className=\"item\">\r\n      <span\r\n        style={{\r\n          fontSize: `${config.labelSize}px`,\r\n          // color: config.labelColor,\r\n          margin: config.labelMargin,\r\n        }}\r\n      >\r\n        {data.label}\r\n      </span>\r\n      <div\r\n        className=\"item-outer\"\r\n        style={{\r\n          width: `${config.width}px`,\r\n          height: `${config.width}px`,\r\n          // border: `${config.loopWidth}px solid ${config.outerColor[0]}`,\r\n          // borderRadius: `50%`,\r\n          //   borderImage: `linear-gradient(${config.outerColor[0]},${config.outerColor[1]}) 30 30`,\r\n        }}\r\n      >\r\n        {/* {config.roundType === \"double\" ? (\r\n          <div\r\n            className=\"item-outer-inside\"\r\n            style={{\r\n              width: `${config.width - config.loopWidth * 3}px`,\r\n              height: `${config.width - config.loopWidth * 3}px`,\r\n              border: config.insideColor\r\n                ? `${config.loopWidth}px solid ${config.insideColor[0]}`\r\n                : \"none\",\r\n              borderRadius: `50%`,\r\n              //   borderImage: `linear-gradient(${config.outerColor[0]},${config.outerColor[1]}) 30 30`,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontSize: config.textSize,\r\n                color: config.textColor,\r\n              }}\r\n            >\r\n            {String(current).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}\r\n            </div>\r\n          </div>\r\n        ) : ( */}\r\n        <div\r\n          style={{\r\n            fontSize: config.textSize,\r\n            // color: config.textColor,\r\n          }}\r\n        >\r\n          {String(current).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}\r\n        </div>\r\n        {/* )} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundItemComponent;\r\n"],"sourceRoot":""}