{"version":3,"sources":["components/DashBoard/Container/index.tsx","components/CustomBackground/index.tsx","components/DoubleCircle/index.tsx","components/Number2/index.tsx","components/MoneyAndCicle/index.tsx","components/DashBoard/withContainer.tsx","../node_modules/@ant-design/charts/es/plots/ringProgress/index.js"],"names":["Container","props","children","attr","id","x","y","w","h","deg","opacity","styles","width","height","left","top","transform","style","className","CustomBackground","typeNo","custom","background","WithContainer","DoubleCircle","innerConfig","autoFit","percent","color","innerRadius","radius","statistic","title","content","outerConfig","position","minHeight","minWidth","marginRight","Number2","data","isThousands","maxLength","isShowFloat","backgroundColor","useState","chars","setChars","container","useRef","liRefList","isInvalidZero","getRef","dom","current","push","isNumber","str","test","useEffect","strNumber","strArr","split","length","zeroStr","zeroAddCout","i","intStr","floatStr","result","count","element","unshift","j","getSplitNumberStr","computedChars","setTimeout","strs","unUseZeroNumber","numbers","filter","numbersDom","num","roll","isvalidChar","ref","map","index","total","nowIndex","config","setTest","mainTitle","subTitleA","subTitleB","setInterval","computedPercent","val","WrappedComponent","ComponentConfig","cacheRepeatRequest","source","componentData","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","RingProgressChart","forwardRef","chartRef","_a","loading","loadingTemplate","errorTemplate","rest","_b","useChart","G2plotRingProgress","chart","getChart","useImperativeHandle","React","createElement","ErrorBoundary","ChartLoading"],"mappings":"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","file":"static/js/6.d58a66a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Attr {\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    deg: number;\r\n    opacity: number;\r\n}\r\n\r\ninterface Props {\r\n    attr: Attr\r\n    id: string\r\n}\r\n\r\nconst Container: React.FC<Props> = (props) => {\r\n  const {children, attr, id} = props;\r\n  const {x , y , w , h, deg, opacity} = attr\r\n\r\n  const styles = {\r\n      width: w || 0,\r\n      height: h || 0,\r\n      left: x || 0,\r\n      top: y ||0 ,\r\n      transform: `rotate(${deg || 0}deg)`,\r\n      opacity: opacity || 1,\r\n  }\r\n  \r\n  return <div style={styles} className=\"absolute\" data-id={id}>\r\n      {children}\r\n  </div>;\r\n};\r\n\r\nexport default Container;","import React from \"react\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\nimport \"./index.less\";\r\n\r\ninterface Props {\r\n  typeNo: number;\r\n  custom?: boolean\r\n  background?: any;\r\n}\r\n\r\nexport const CustomBackground = (props: Props) => {\r\n  const { typeNo = 1, custom = false, background = {} } = props;\r\n  return custom ? <div style={{ ...background }} /> : <div className={`background-layer bl-no-${typeNo}`} />;\r\n\r\n};\r\n\r\nexport default WithContainer(CustomBackground);\r\n","import React from \"react\";\r\nimport { RingProgress } from \"@ant-design/charts\";\r\n\r\nconst DoubleCircle: React.FC<any> = (props) => {\r\n  const config1 = {\r\n    height: 80,\r\n    width: 80,\r\n    autoFit: false,\r\n    percent: 0.6,\r\n    color: [\"l(0) 0:rgba(243,168,19, 0.2) 1:rgba(243,168,19, 1)\", \"rgba(243,168,19, 0.1)\"],\r\n    innerRadius: 0.85,\r\n    radius: 0.98,\r\n    statistic: {\r\n      title: false,\r\n      content: false,\r\n    },\r\n  };\r\n\r\n  const config2 = {\r\n    height: 120,\r\n    width: 120,\r\n    autoFit: false,\r\n    percent: 0.4,\r\n    color: [\"l(0) 0:rgba(93,128,255, 0.2) 1:rgba(93,128,255, 0.8)\", \"rgba(93,128,255, 0.1)\"],\r\n    innerRadius: 0.85,\r\n    radius: 0.98,\r\n    statistic: {\r\n      title: false,\r\n      content: false,\r\n    },\r\n  };\r\n  const { innerConfig = config1, outerConfig = config2 } = props;\r\n\r\n  return (\r\n    <div style={{ position: \"relative\", top: '0', minHeight: outerConfig.height, minWidth:outerConfig.width, marginRight: '10px' }}>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          background: \"transparent\",\r\n        }}\r\n      >\r\n        <RingProgress {...outerConfig} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 8,\r\n          left: 8,\r\n          background: \"transparent\",\r\n        }}\r\n      >\r\n        <RingProgress {...innerConfig} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoubleCircle;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\nimport \"./index.less\";\r\n\r\ninterface Props {\r\n  data: number;\r\n  isThousands: Boolean;\r\n  maxLength?: number;\r\n  isShowFloat?: Boolean;\r\n  color: string;\r\n  backgroundColor: string;\r\n}\r\n\r\nexport const Number2 = (props: Props) => {\r\n  const {\r\n    data,\r\n    isThousands = true,\r\n    maxLength = 10,\r\n    isShowFloat = true,\r\n    color = \"rgba(93,128,255, 1)\",\r\n    backgroundColor = \"rgba(93,128,255, 0.2)\",\r\n  } = props;\r\n  const [chars, setChars] = useState<string[]>([]);\r\n  const container = useRef(null);\r\n  const liRefList = useRef<any>([]);\r\n  let isInvalidZero = true;\r\n  const getRef = (dom: any) => {\r\n    liRefList.current.push(dom);\r\n  };\r\n  // const [current, setCurrent] = useState<number>(0);\r\n  const computedChars = (data: Number) => {\r\n    let strNumber = \"\";\r\n    const strArr = `${data}`.split(\".\");\r\n\r\n    // 有小数部分\r\n    if (strArr.length > 1) {\r\n      // 只有一位小数\r\n      if (strArr[1].length === 1) {\r\n        strNumber = `${strArr[0]}.${strArr[1]}0`;\r\n      } else {\r\n        strNumber = `${data}`;\r\n      }\r\n    } else {\r\n      // 只有整数\r\n      strNumber = `${strArr[0]}.00`;\r\n    }\r\n    let chars = [];\r\n    let zeroStr = \"\";\r\n    const zeroAddCout = maxLength - strArr[0].length;\r\n    for (let i = 1; i <= zeroAddCout; i++) {\r\n      zeroStr += \"0\";\r\n    }\r\n    // 补0完成\r\n    strNumber = `${zeroStr}${strNumber}`;\r\n    const getSplitNumberStr = (str: string): string[] => {\r\n      const intStr = str.split(\".\")[0];\r\n      const floatStr = str.split(\".\")[1];\r\n      const result = [];\r\n      let count = 0;\r\n      for (let i = intStr.length - 1; i > -1; i--) {\r\n        const element = intStr[i];\r\n\r\n        if (count === 3) {\r\n          result.unshift(\",\");\r\n          count = 0;\r\n        }\r\n        result.unshift(element);\r\n        count += 1;\r\n      }\r\n      result.push(\".\");\r\n      for (let j = 0; j < floatStr.length; j++) {\r\n        const element = floatStr[j];\r\n        result.push(element);\r\n      }\r\n      return result;\r\n    };\r\n    // 增加分割符号\r\n    chars = getSplitNumberStr(strNumber);\r\n    return {\r\n      chars,\r\n      zeroAddCout,\r\n    };\r\n  };\r\n\r\n  const roll = (strs: any, unUseZeroNumber: number) => {\r\n    const numbers = strs.filter((str: string) => isNumber(str));\r\n    const numbersDom = liRefList.current;\r\n    for (let i = 0; i < numbers.length; i++) {\r\n      const num = numbers[i];\r\n      const ele = numbersDom[i];\r\n      ele.style.transform = `translate(-50%, -${num * 10}%)`;\r\n    }\r\n  };\r\n\r\n  const isNumber = (str: string) => /^\\d$/.test(str);\r\n\r\n  useEffect(() => {\r\n    const { chars, zeroAddCout } = computedChars(data);\r\n    setChars(chars);\r\n    setTimeout(() => {\r\n      roll(chars, zeroAddCout);\r\n    }, 100);\r\n    // container.current.children\r\n  }, [data]);\r\n\r\n  const isvalidChar = (str: string) => {\r\n    if (str === \"0\" || str === \",\" || str === \".\") {\r\n      if (isInvalidZero) {\r\n        return false;\r\n      } else {\r\n        isInvalidZero = false;\r\n        return true;\r\n      }\r\n    } else {\r\n      isInvalidZero = false;\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const isLastTwoChar = (total: number, nowIndex: number) => {\r\n    return nowIndex === total - 1 || nowIndex === total - 2;\r\n  };\r\n\r\n  return (\r\n    <span className=\"Number2Container\" ref={container}>\r\n      {chars.map((str: string, index) => (\r\n        // <div className={isNumber(str) ? 'numberItem' : ''}>\r\n        <div\r\n          key={index}\r\n          className={\r\n            isLastTwoChar(chars.length, index)\r\n              ? \"numberItem floatItem\"\r\n              : \"numberItem\"\r\n          }\r\n          style={{\r\n            color,\r\n            marginRight: isNumber(str) ? \"3px\" : \"0\",\r\n            opacity: isvalidChar(str) ? 1 : 0.2,\r\n          }}\r\n        >\r\n          {isNumber(str) ? (\r\n            <span ref={getRef} style={{ backgroundColor }}>\r\n              0123456789\r\n            </span>\r\n          ) : (\r\n            <i>{str}</i>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default WithContainer(Number2);\r\n","import React, { useState } from \"react\";\r\nimport { NumberAndTitle } from \"../NumberAndTitle\";\r\nimport { Number2 } from \"../Number2\";\r\nimport { CustomBackground } from \"../CustomBackground\";\r\nimport DoubleCircle from \"../DoubleCircle\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\nimport \"./index.less\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction MoneyAndCicle(props: any) {\r\n  const { config = {}, data = [0, 0] } = props;\r\n  const [test, setTest] = useState(12345);\r\n  const { mainTitle, subTitleA = \"A类\", subTitleB = \"B类\" } = config;\r\n\r\n  const NumberStyle = {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"16px\",\r\n    fontWeight: 700,\r\n    letterSpacing: 0,\r\n  };\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setTest(77713789);\r\n    }, 1000);\r\n  }, []);\r\n  const computedPercent = (val: any) => val / (data[0] + data[1]);\r\n\r\n  const innerConfig = {\r\n    height: 30,\r\n    width: 30,\r\n    autoFit: false,\r\n    percent: computedPercent(data[1]),\r\n    color: [\r\n      \"l(0) 0:rgba(243,168,19, 0.2) 1:rgba(243,168,19, 1)\",\r\n      \"rgba(243,168,19, 0.1)\",\r\n    ],\r\n    innerRadius: 0.85,\r\n    radius: 0.98,\r\n    statistic: {\r\n      title: false,\r\n      content: false,\r\n    },\r\n  };                         \r\n  const outerConfig = {\r\n    height: 45,\r\n    width: 45,\r\n    autoFit: false,\r\n    percent: computedPercent(data[0]),\r\n    color: [\r\n      \"l(0) 0:rgba(93,128,255, 0.2) 1:rgba(93,128,255, 0.8)\",\r\n      \"rgba(93,128,255, 0.1)\",\r\n    ],\r\n    innerRadius: 0.85,\r\n    radius: 0.98,\r\n    statistic: {\r\n      title: false,\r\n      content: false,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"moneyAndCicleContainer\">\r\n      <div className=\"topBox\">\r\n        <div className=\"imgBox\">\r\n          <CustomBackground typeNo={22} />\r\n        </div>\r\n        <span className=\"mainTitle\">{mainTitle}</span>\r\n        <div className=\"circle\">\r\n          <DoubleCircle innerConfig={innerConfig} outerConfig={outerConfig} />\r\n        </div>\r\n      </div>\r\n      <div className=\"titleBox\">\r\n        <div className=\"feeBox\">\r\n          <span className=\"subTitle\">{subTitleA}</span>\r\n          <span className=\"numberBox\">\r\n            <Number2\r\n              data={data[0]}\r\n              isThousands\r\n              color=\"rgba(93,128,255, 1)\"\r\n              backgroundColor=\"rgba(93,128,255, 0.2)\"\r\n            />\r\n          </span>\r\n        </div>\r\n        <div className=\"feeBox\">\r\n          <span className=\"subTitle\">{subTitleB}</span>\r\n          <span className=\"numberBox\">\r\n            <Number2\r\n              data={data[1]}\r\n              isThousands\r\n              color=\"rgba(246,170,20, 1)\"\r\n              backgroundColor=\"rgba(246,170,20, 0.2)\"\r\n            />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WithContainer(MoneyAndCicle);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport request from \"../../utils/request\";\r\nimport { RequestThrottle } from \"./utils\";\r\n\r\ninterface Props {\r\n  config: DashBoard.Layer;\r\n  cacheRepeatRequest: boolean \r\n}\r\n\r\nexport function WithContainer(WrappedComponent: any) {\r\n  const ContainerFC: React.FC<Props> = (props) => {\r\n    const { config, cacheRepeatRequest } = props;\r\n    const {\r\n      config: ComponentConfig,\r\n      attr,\r\n      data,\r\n      data: { source },\r\n      id,\r\n    } = config;\r\n\r\n    const [componentData, setComponentData] = useState(source);\r\n    // useEffect(() => {\r\n    //   // 这一层去改变数据\r\n    //   const { autoUpdate, api = { url: \"\", method: \"get\", staleTime: 5 * 1000, handleRes: (res:any) => res } } = data;\r\n    //   const { url, method, staleTime, handleRes } = api;\r\n\r\n    //   const appendRequest = (RequestThrottle:any) => {\r\n    //     RequestThrottle.appendUrl(url);\r\n    //     request[method](url).then((res) => {\r\n    //       if (res.code === \"00000\") {\r\n    //         RequestThrottle.updateUrlRes(url, res);\r\n    //         const cData = handleRes? handleRes(res.data) : res.data\r\n    //         setComponentData(cData);\r\n    //       }\r\n    //     });\r\n    //   }\r\n\r\n    //   if (autoUpdate && typeof autoUpdate === \"number\") {\r\n    //     const id = setInterval(() => {\r\n    //       if (cacheRepeatRequest) {\r\n    //         const requestUrl = RequestThrottle.getUrlFromUrls(url);\r\n    //         // 有正在请求的相同的请求\r\n    //         if (requestUrl) {\r\n    //           //请求中\r\n    //           if (requestUrl.status === \"pendding\") {\r\n    //             RequestThrottle.subscribe(url, (res: any) => {\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             });\r\n    //           } else {\r\n    //             // 有请求成功的相同请求\r\n    //             const cha = new Date().getTime() - requestUrl.startTime;\r\n    //             // 该请求还未过有效期\r\n    //             if (cha >= staleTime) {\r\n    //               appendRequest(RequestThrottle)\r\n    //             } else {\r\n    //               // 过了有效期 重新发起请求\r\n    //               const { res } = requestUrl;\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             }\r\n    //           }\r\n    //         } else {\r\n    //           // 之前没有过相同的请求\r\n    //           appendRequest(RequestThrottle)\r\n    //         }\r\n    //       } else {\r\n    //         request[method](url).then((res) => {\r\n    //           if (res.code === \"00000\") {\r\n    //             const cData = handleRes? handleRes(res.data) : res.data\r\n    //             setComponentData(cData);\r\n    //           }\r\n    //         });\r\n    //       }\r\n    //     }, autoUpdate);\r\n\r\n    //     return () => {\r\n    //       clearInterval(id);\r\n    //     };\r\n    //   }\r\n    // }, []);\r\n\r\n    return (\r\n      <Container attr={attr} id={id}>\r\n        <WrappedComponent {...ComponentConfig} data={componentData} />\r\n      </Container>\r\n    );\r\n  };\r\n  return ContainerFC;\r\n}\r\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { RingProgress as G2plotRingProgress, } from '@antv/g2plot';\nimport useChart from '../../hooks/useChart';\nimport { getChart } from '../../util';\nimport { ErrorBoundary } from '../../base';\nimport ChartLoading from '../../util/createLoading';\nvar RingProgressChart = forwardRef(function (props, ref) {\n    var chartRef = props.chartRef, _a = props.style, style = _a === void 0 ? {\n        height: 'inherit',\n    } : _a, className = props.className, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate, rest = __rest(props, [\"chartRef\", \"style\", \"className\", \"loading\", \"loadingTemplate\", \"errorTemplate\"]);\n    var _b = useChart(G2plotRingProgress, rest), chart = _b.chart, container = _b.container;\n    useEffect(function () {\n        getChart(chartRef, chart.current);\n    }, [chart.current]);\n    useImperativeHandle(ref, function () { return ({\n        getChart: function () { return chart.current; },\n    }); });\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n});\nexport default RingProgressChart;\n"],"sourceRoot":""}