{"version":3,"sources":["components/DashBoard/Container/index.tsx","../node_modules/@ant-design/charts/es/plots/area/index.js","components/Area/index.tsx","components/DashBoard/withContainer.tsx"],"names":["Container","props","children","attr","id","x","y","w","h","deg","opacity","styles","width","height","left","top","transform","style","className","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","AreaChart","forwardRef","ref","chartRef","_a","loading","loadingTemplate","errorTemplate","rest","_b","useChart","G2plotArea","chart","container","useEffect","getChart","current","useImperativeHandle","React","createElement","ErrorBoundary","ChartLoading","WithContainer","dataDefault","date","value","type","configDefault","xField","yField","seriesField","color","isStack","xAxis","label","line","stroke","tickLine","subTickLine","yAxis","fill","grid","max","parseInt","maxBy","legend","position","marker","symbol","fillOpacity","itemName","point","size","shape","lineWidth","fontSize","tooltip","data","config","config_","cloneDeep","result","minItem","minBy","yAxisMaxValue","min","WrappedComponent","ComponentConfig","cacheRepeatRequest","source","useState","componentData"],"mappings":"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","file":"static/js/11.9f603edb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Attr {\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    deg: number;\r\n    opacity: number;\r\n}\r\n\r\ninterface Props {\r\n    attr: Attr\r\n    id: string\r\n}\r\n\r\nconst Container: React.FC<Props> = (props) => {\r\n  const {children, attr, id} = props;\r\n  const {x , y , w , h, deg, opacity} = attr\r\n\r\n  const styles = {\r\n      width: w || 0,\r\n      height: h || 0,\r\n      left: x || 0,\r\n      top: y ||0 ,\r\n      transform: `rotate(${deg || 0}deg)`,\r\n      opacity: opacity || 1,\r\n  }\r\n  \r\n  return <div style={styles} className=\"absolute\" data-id={id}>\r\n      {children}\r\n  </div>;\r\n};\r\n\r\nexport default Container;","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { Area as G2plotArea } from '@antv/g2plot';\nimport useChart from '../../hooks/useChart';\nimport { getChart } from '../../util';\nimport { ErrorBoundary } from '../../base';\nimport ChartLoading from '../../util/createLoading';\nvar AreaChart = forwardRef(function (props, ref) {\n    var chartRef = props.chartRef, _a = props.style, style = _a === void 0 ? {\n        height: 'inherit',\n    } : _a, className = props.className, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate, rest = __rest(props, [\"chartRef\", \"style\", \"className\", \"loading\", \"loadingTemplate\", \"errorTemplate\"]);\n    var _b = useChart(G2plotArea, rest), chart = _b.chart, container = _b.container;\n    useEffect(function () {\n        getChart(chartRef, chart.current);\n    }, [chart.current]);\n    useImperativeHandle(ref, function () { return ({\n        getChart: function () { return chart.current; },\n    }); });\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n});\nexport default AreaChart;\n","import React, { useEffect } from 'react';\r\nimport { Area } from '@ant-design/charts';\r\nimport { maxBy, cloneDeep, minBy } from 'lodash';\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\nimport './index.less';\r\n\r\ninterface Props {\r\n  data: [],\r\n  config: any\r\n}\r\n\r\nconst AreaCom: React.FC<Props> = (props) => {\r\n  const dataDefault = [\r\n    {\r\n      date: '01',\r\n      value: 52,\r\n      type: '近7日话务量'\r\n    },\r\n    {\r\n      date: '01',\r\n      value: 25,\r\n      type: '近7日接通量'\r\n    },\r\n    {\r\n      date: '02',\r\n      value: 23,\r\n      type: '近7日话务量'\r\n    },\r\n    {\r\n      date: '02',\r\n      value: 57,\r\n      type: '近7日接通量'\r\n    },\r\n    {\r\n      date: '03',\r\n      value: 42,\r\n      type: '近7日话务量'\r\n    },\r\n    {\r\n      date: '03',\r\n      value: 25,\r\n      type: '近7日接通量'\r\n    },\r\n    {\r\n      date: '04',\r\n      value: 38,\r\n      type: '近7日话务量'\r\n    },\r\n    {\r\n      date: '04',\r\n      value: 18,\r\n      type: '近7日接通量'\r\n    },\r\n    {\r\n      date: '05',\r\n      value: 48,\r\n      type: '近7日话务量'\r\n    },\r\n    {\r\n      date: '05',\r\n      value: 38,\r\n      type: '近7日接通量'\r\n    },\r\n    {\r\n      date: '06',\r\n      value: 25,\r\n      type: '近7日话务量'\r\n    },\r\n    {\r\n      date: '06',\r\n      value: 35,\r\n      type: '近7日接通量'\r\n    },\r\n    {\r\n      date: '07',\r\n      value: 52,\r\n      type: '近7日话务量'\r\n    },\r\n    {\r\n      date: '07',\r\n      value: 52,\r\n      type: '近7日接通量'\r\n    },\r\n  ];\r\n  var configDefault = {\r\n    xField: 'date',\r\n    yField: 'value',\r\n    seriesField: 'type',\r\n    color: ['#27E0FE', '#FF6600'],\r\n    isStack: false,\r\n    xAxis: {\r\n      label: null,\r\n      line: {\r\n        style: {\r\n          stroke: 'rgba(255, 255, 255, 0.1)'\r\n        }\r\n      },\r\n      tickLine: null,\r\n      subTickLine: null,\r\n    },\r\n    yAxis: {\r\n      label: {\r\n        style: {\r\n          fill: 'rgba(255, 255, 255, 0.4)'\r\n        }\r\n      },\r\n      line: null,\r\n      grid: {\r\n        line: {\r\n          style: {\r\n            stroke: 'rgba(255, 255, 255, 0.1)',\r\n          }\r\n        }\r\n      },\r\n      max: parseInt(`${maxBy(dataDefault, 'value').value * 3.7 / 3}`, 10)\r\n    },\r\n    legend: {\r\n      position: 'top-right' as const,\r\n      marker: {\r\n        symbol: 'circle' as const,\r\n        style: {\r\n          fillOpacity: 1,\r\n        }\r\n      },\r\n      itemName: {\r\n        style: {\r\n          fill: 'rgba(255, 255, 255, 0.4)'\r\n        }\r\n      }\r\n    },\r\n    point: {\r\n      size: 3,\r\n      shape: \"circle\",\r\n      style: {\r\n        lineWidth: 0,\r\n      },\r\n    },\r\n    label: {\r\n      style: {\r\n        fontSize: 12,\r\n        fill: \"rgba(255, 255, 255, 0.4)\",\r\n      }\r\n    },\r\n    tooltip: false\r\n  };\r\n  const {data = dataDefault, config = configDefault} = props\r\n\r\n  const config_ = cloneDeep(config)\r\n  const result = maxBy(data, 'value')\r\n  const minItem = minBy(data, 'value')\r\n  if (result && result.value) {\r\n    const maxValue = result.value\r\n    const yAxisMaxValue = maxValue \r\n    // yAxisMaxValue = parseInt(`${maxValue * 3.7 / 3}`, 10)\r\n    // const yAxisMaxValue = 1700\r\n    config_.yAxis.max = yAxisMaxValue\r\n    config_.yAxis.min = minItem.value\r\n  }\r\n\r\n  return <div className=\"hwl-container\">\r\n    <div className=\"today\">\r\n      <div className=\"today-item\">\r\n        <h3>话务量</h3>\r\n        <p>{data[data.length - 1].value}</p>\r\n      </div>\r\n      <div className=\"today-item\">\r\n        <h3>接通量</h3>\r\n        <p>{data[data.length - 2].value}</p>\r\n      </div>\r\n    </div>\r\n    <div className=\"recently\">\r\n      <Area {...config_} data={data} />\r\n    </div>\r\n  </div>;\r\n};\r\n\r\nexport default WithContainer(AreaCom);","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport request from \"../../utils/request\";\r\nimport { RequestThrottle } from \"./utils\";\r\n\r\ninterface Props {\r\n  config: DashBoard.Layer;\r\n  cacheRepeatRequest: boolean \r\n}\r\n\r\nexport function WithContainer(WrappedComponent: any) {\r\n  const ContainerFC: React.FC<Props> = (props) => {\r\n    const { config, cacheRepeatRequest } = props;\r\n    const {\r\n      config: ComponentConfig,\r\n      attr,\r\n      data,\r\n      data: { source },\r\n      id,\r\n    } = config;\r\n\r\n    const [componentData, setComponentData] = useState(source);\r\n    // useEffect(() => {\r\n    //   // 这一层去改变数据\r\n    //   const { autoUpdate, api = { url: \"\", method: \"get\", staleTime: 5 * 1000, handleRes: (res:any) => res } } = data;\r\n    //   const { url, method, staleTime, handleRes } = api;\r\n\r\n    //   const appendRequest = (RequestThrottle:any) => {\r\n    //     RequestThrottle.appendUrl(url);\r\n    //     request[method](url).then((res) => {\r\n    //       if (res.code === \"00000\") {\r\n    //         RequestThrottle.updateUrlRes(url, res);\r\n    //         const cData = handleRes? handleRes(res.data) : res.data\r\n    //         setComponentData(cData);\r\n    //       }\r\n    //     });\r\n    //   }\r\n\r\n    //   if (autoUpdate && typeof autoUpdate === \"number\") {\r\n    //     const id = setInterval(() => {\r\n    //       if (cacheRepeatRequest) {\r\n    //         const requestUrl = RequestThrottle.getUrlFromUrls(url);\r\n    //         // 有正在请求的相同的请求\r\n    //         if (requestUrl) {\r\n    //           //请求中\r\n    //           if (requestUrl.status === \"pendding\") {\r\n    //             RequestThrottle.subscribe(url, (res: any) => {\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             });\r\n    //           } else {\r\n    //             // 有请求成功的相同请求\r\n    //             const cha = new Date().getTime() - requestUrl.startTime;\r\n    //             // 该请求还未过有效期\r\n    //             if (cha >= staleTime) {\r\n    //               appendRequest(RequestThrottle)\r\n    //             } else {\r\n    //               // 过了有效期 重新发起请求\r\n    //               const { res } = requestUrl;\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             }\r\n    //           }\r\n    //         } else {\r\n    //           // 之前没有过相同的请求\r\n    //           appendRequest(RequestThrottle)\r\n    //         }\r\n    //       } else {\r\n    //         request[method](url).then((res) => {\r\n    //           if (res.code === \"00000\") {\r\n    //             const cData = handleRes? handleRes(res.data) : res.data\r\n    //             setComponentData(cData);\r\n    //           }\r\n    //         });\r\n    //       }\r\n    //     }, autoUpdate);\r\n\r\n    //     return () => {\r\n    //       clearInterval(id);\r\n    //     };\r\n    //   }\r\n    // }, []);\r\n\r\n    return (\r\n      <Container attr={attr} id={id}>\r\n        <WrappedComponent {...ComponentConfig} data={componentData} />\r\n      </Container>\r\n    );\r\n  };\r\n  return ContainerFC;\r\n}\r\n"],"sourceRoot":""}