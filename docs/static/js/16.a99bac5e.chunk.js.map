{"version":3,"sources":["components/Map/index.tsx","components/Map/southSea.svg"],"names":["echarts","TitleComponent","ToolboxComponent","TooltipComponent","VisualMapComponent","GeoComponent","MapChart","CanvasRenderer","ScatterChart","EffectScatterChart","WithContainer","props","map","useRef","provinceDataOrign","data","config","height","width","provinceData","filter","item","name","sort","a","b","localeCompare","useEffect","option","chartDom","current","myChart","chineseMap","AREA_COLOR","tooltip","trigger","formatter","parmas","ticket","callback","premium","analysisRatio","completeRatio","slice","getCsvNumber","backgroundColor","borderColor","borderWidth","padding","position","point","extraCssText","geo","itemStyle","areaColor","label","show","series","type","mapType","emphasis","i","length","element","handleProvinceData","nameMap","广东省","云南省","海南省","四川省","江西省","湖北省","山东省","安徽省","广西壮族自治区","贵州省","上海市","河南省","陕西省","河北省","setOption","nowIndex","showToolTips","dataNum","dispatchAction","seriesIndex","dataIndex","setTimeout","setInterval","init","ref","style","background","top","right","src","southSeaImg","alt"],"mappings":"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","file":"static/js/16.a99bac5e.chunk.js","sourcesContent":["// @ts-nocheck\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport \"./index.less\";\r\nimport * as echarts from \"echarts/core\";\r\nimport {\r\n  TitleComponent,\r\n  ToolboxComponent,\r\n  TooltipComponent,\r\n  VisualMapComponent,\r\n  GeoComponent,\r\n} from \"echarts/components\";\r\nimport { MapChart, ScatterChart, EffectScatterChart } from \"echarts/charts\";\r\nimport { CanvasRenderer } from \"echarts/renderers\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\nimport { chineseMap } from \"../../assets/chinese.js\";\r\nimport { getCsvNumber } from \"../../utils/utils\";\r\nimport Pointer from \"../MapV5/pointer\";  // 采用V5的pointer\r\n// import Pointer from \"./pointer\";\r\n\r\n// const southSeaImg = require(\"\");\r\nimport southSeaImg from './southSea.svg'\r\n\r\necharts.use([\r\n  TitleComponent,\r\n  ToolboxComponent,\r\n  TooltipComponent,\r\n  VisualMapComponent,\r\n  GeoComponent,\r\n  MapChart,\r\n  CanvasRenderer,\r\n  ScatterChart,\r\n  EffectScatterChart,\r\n]);\r\n\r\nconst Map = (props) => {\r\n  const map = useRef(null);\r\n  const { data: provinceDataOrign, config: { height, width }, } = props;\r\n  const provinceData = provinceDataOrign\r\n    .filter((item) => item.name !== \"深圳分公司\")\r\n    .sort((a, b) => a.name.localeCompare(b.name));\r\n  const init = () => {\r\n    const BORDER_COLOR = '#2F5F91'\r\n    var chartDom = map.current;\r\n    var myChart = echarts.init(chartDom);\r\n    var option;\r\n    echarts.registerMap(\"China\", chineseMap);\r\n\r\n    // var data = [\r\n    //   {\r\n    //     name: \"广东分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"云南分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"海南分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"四川分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"湖北分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"江西分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"山东分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"广西分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"贵州分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"深圳分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"上海分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"河南分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"陕西分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    //   {\r\n    //     name: \"河北分公司\",\r\n    //     value: 10,\r\n    //   },\r\n    // ];\r\n\r\n    // var geoCoordMap = {\r\n    //   广东分公司: [113.34, 23.13],\r\n    //   云南分公司: [102.72, 25.04],\r\n    //   海南分公司: [110.31, 20.03],\r\n    //   四川分公司: [104.04, 30.63],\r\n    //   湖北分公司: [114.34, 30.56],\r\n    //   江西分公司: [115.85, 28.7],\r\n    //   山东分公司: [117.07, 36.68],\r\n    //   安徽分公司: [117.32, 31.87],\r\n    //   广西分公司: [108.37, 22.83],\r\n    //   贵州分公司: [106.72, 26.57],\r\n    //   深圳分公司: [114.11, 22.56],\r\n    //   上海分公司: [121.37, 31.12],\r\n    //   河南分公司: [113.76, 34.77],\r\n    //   陕西分公司: [108.89, 34.22],\r\n    //   河北分公司: [114.56, 38.02],\r\n    // };\r\n\r\n    // const provinceData = [\r\n    //   { name: \"广东省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"云南省\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"海南省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"四川省\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"江西省\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"湖北省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"山东省\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"安徽省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"广西壮族自治区\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"贵州省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"上海市\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"河南省\", value: 2000, value1: 100, value2: 100 },\r\n    //   { name: \"陕西省\", value: 20057.34, value1: 100, value2: 100 },\r\n    //   { name: \"河北省\", value: 2000, value1: 100, value2: 100 },\r\n    // ];\r\n\r\n    const nameMap = {\r\n      广东省: \"广东分公司\",\r\n      云南省: \"云南分公司\",\r\n      海南省: \"海南分公司\",\r\n      四川省: \"四川分公司\",\r\n      江西省: \"江西分公司\",\r\n      湖北省: \"湖北分公司\",\r\n      山东省: \"山东分公司\",\r\n      安徽省: \"安徽分公司\",\r\n      广西壮族自治区: \"广西分公司\",\r\n      贵州省: \"贵州分公司\",\r\n      上海市: \"上海分公司\",\r\n      河南省: \"河南分公司\",\r\n      陕西省: \"陕西分公司\",\r\n      河北省: \"河北分公司\",\r\n    };\r\n\r\n    // var convertData = function (data) {\r\n    //   var res = [];\r\n    //   for (var i = 0; i < data.length; i++) {\r\n    //     var geoCoord = geoCoordMap[data[i].name];\r\n    //     if (geoCoord) {\r\n    //       res.push({\r\n    //         name: data[i].name,\r\n    //         value: geoCoord.concat(data[i].value),\r\n    //       });\r\n    //     }\r\n    //   }\r\n    //   return res;\r\n    // };\r\n\r\n    // const tooltipRender = (parmas, ticket, callback) => {\r\n    //   const { data } = parmas;\r\n    //   if (data) {\r\n    //     const { name, customerNum, instranceNum, reportNum, signMoney, accreditationNum } = data;\r\n    //     return `<div style=\"min-width:253px;\">\r\n    //     <h3 style=\"margin:6px 0;font-size: 24px;color: #EFEFF1;margin-bottom: 16px;\">${name.slice(\r\n    //       0,\r\n    //       2\r\n    //     )}<span style=\"font-size: 16px;margin-left: 10px;\">（今日）</span></h3>\r\n    //     <div style=\"display: flex;justify-content: space-between;margin-bottom: 16px;\">\r\n    //       <div style=\"font-size: 18px;color: #EFEFF1; font-weight: 600;\">签单金额：</div>\r\n    //       <div style=\"font-size: 18px;color: #FF9E0D;\">${getCsvNumber(\r\n    //         signMoney\r\n    //       )}万</div>\r\n    //     </div>\r\n    //     <div style=\"display: flex;justify-content: space-between;margin-bottom: 16px;\">\r\n    //       <div style=\"font-size: 18px;color: #EFEFF1; font-weight: 600;\">客户数：</div>\r\n    //       <div style=\"font-size: 18px;color: #FF9E0D;\">${getCsvNumber(\r\n    //         customerNum\r\n    //       )}个</div>\r\n    //     </div>\r\n    //     <div style=\"display: flex;justify-content: space-between;margin-bottom: 16px;\">\r\n    //       <div style=\"font-size: 18px;color: #EFEFF1; font-weight: 600;\">保单量：</div>\r\n    //       <div style=\"font-size: 18px;color: #FF9E0D;\"=\"font-size: 18px;color: #FF9E0D;\">${getCsvNumber(\r\n    //         instranceNum\r\n    //       )}件</div>\r\n    //     </div>\r\n    //     <div style=\"display: flex;justify-content: space-between;margin-bottom: 16px;\">\r\n    //       <div style=\"font-size: 18px;color: #EFEFF1; font-weight: 600;\">报案量：</div>\r\n    //       <div style=\"font-size: 18px;color: #FF9E0D;\"=\"font-size: 18px;color: #FF9E0D;\">${getCsvNumber(\r\n    //         reportNum\r\n    //       )}件</div>\r\n    //     </div>\r\n    //     <div style=\"display: flex;justify-content: space-between;\">\r\n    //       <div style=\"font-size: 18px;color: #EFEFF1; font-weight: 600;\">立案量：</div>\r\n    //       <div style=\"font-size: 18px;color: #FF9E0D;\"=\"font-size: 18px;color: #FF9E0D;\">${getCsvNumber(\r\n    //         accreditationNum\r\n    //       )}件</div>\r\n    //     </div>\r\n    //     </div>`;\r\n    //   }\r\n    //   return null;\r\n    // };\r\n\r\n    const tooltipRender2 = (parmas, ticket, callback) => {\r\n      const { data } = parmas;\r\n      if (data) {\r\n        const { name, premium, analysisRatio, completeRatio } = data;\r\n        return `<div style=\"min-width:150px;\">\r\n        <h3 style=\"margin:3px 0;font-size: 16px;color: #EFEFF1;margin-bottom: 12px;\">${name.slice(\r\n          0,\r\n          2\r\n        )}(当年)</h3>\r\n        <div style=\"display: flex;justify-content: space-between;margin-bottom: 12px;\">\r\n          <div style=\"font-size: 14px;color: #EFEFF1; font-weight: 600;\">保费收入：</div>\r\n          <div style=\"font-size: 14px;color: #FF9E0D;\">${getCsvNumber(\r\n            premium\r\n          )}万</div>\r\n        </div>\r\n        <div style=\"display: flex;justify-content: space-between;margin-bottom: 12px;\">\r\n          <div style=\"font-size: 14px;color: #EFEFF1; font-weight: 600;\">综合成本率：</div>\r\n          <div style=\"font-size: 14px;color: #FF9E0D;\">${analysisRatio}%</div>\r\n        </div>\r\n        <div style=\"display: flex;justify-content: space-between;margin-bottom: 0px;\">\r\n          <div style=\"font-size: 14px;color: #EFEFF1; font-weight: 600;\">总达成率：</div>\r\n          <div style=\"font-size: 14px;color: #FF9E0D;\">${completeRatio}%</div>\r\n        </div>\r\n        </div>`;\r\n      }\r\n      return null;\r\n    };\r\n\r\n    const handleProvinceData = (data: any[]) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        const element = data[i];\r\n        data[i] = {\r\n          ...element,\r\n          // 有数据的省份的颜色\r\n          itemStyle: {\r\n            borderColor: \"#78BFE5\",\r\n            areaColor: \"#337AC2\",\r\n            // areaColor: \"#093871 #164390\",\r\n          },\r\n        };\r\n      }\r\n      return data;\r\n    };\r\n\r\n    const AREA_COLOR = '#05255A'\r\n\r\n    option = {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n        formatter: tooltipRender2,\r\n        backgroundColor: \"rgba(34,79,126, 0.51)\",\r\n        borderColor: \"rgba(120,191,229,0.62)\",\r\n        borderWidth: 1,\r\n        // padding: 20,\r\n        padding: 12,\r\n        position: (point, parmas) => {\r\n          const {data: {name}} = parmas\r\n          if (name === '河北分公司' || name === '山东分公司') {\r\n            return 'bottom'\r\n          }\r\n          if (name === '河南分公司' || name === '陕西分公司') {\r\n            return 'left'\r\n          }\r\n          return 'top'\r\n        },\r\n        extraCssText:\r\n          \"box-shadow: 0 3px 13px 0 rgba(0,0,0,0.1);backdrop-filter: blur(5px);\",\r\n      },\r\n      geo: {\r\n        map: \"China\",\r\n        // 默认颜色\r\n        itemStyle: {\r\n          borderColor: \"#8BD6EB\",\r\n          areaColor: AREA_COLOR,\r\n        },\r\n        label: {\r\n          show: false,\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: \"香港18区人口密度\",\r\n          type: \"map\",\r\n          mapType: \"China\", // 自定义扩展图表类型\r\n          label: {\r\n            show: false,\r\n          },\r\n           // 默认颜色\r\n          itemStyle: {\r\n            borderColor: BORDER_COLOR,\r\n            areaColor: AREA_COLOR,\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: false,\r\n            },\r\n            itemStyle: {\r\n              areaColor: \"#FF9E0D\",\r\n            },\r\n          },\r\n          data: handleProvinceData(provinceData),\r\n          nameMap,\r\n        },\r\n        // {\r\n        //   name: \"Top 5\",\r\n        //   type: \"effectScatter\",\r\n        //   coordinateSystem: \"geo\",\r\n        //   data: convertData(data),\r\n        //   encode: {\r\n        //     value: 2,\r\n        //   },\r\n        //   symbolSize: 10,\r\n        //   showEffectOn: \"render\",\r\n        //   rippleEffect: {\r\n        //     brushType: \"stroke\",\r\n        //   },\r\n\r\n        //   hoverAnimation: true,\r\n        //   label: {\r\n        //     formatter: \"{b}\",\r\n        //     position: \"right\",\r\n        //     show: false,\r\n        //   },\r\n        //   itemStyle: {\r\n        //     color: \"#FF9E0D\",\r\n        //     shadowBlur: 10,\r\n        //     shadowColor: \"#333\",\r\n        //   },\r\n        //   zlevel: 1,\r\n        // },\r\n      ],\r\n    };\r\n\r\n    if (option && typeof option === \"object\") {\r\n      myChart.setOption(option);\r\n    }\r\n\r\n    let nowIndex = 0;\r\n\r\n    const showToolTips = () => {\r\n      const dataNum = provinceData.length;\r\n      myChart.dispatchAction({\r\n        type: \"downplay\",\r\n        seriesIndex: 0,\r\n        dataIndex: nowIndex - 1 < 0 ? dataNum - 1 : nowIndex - 1,\r\n      });\r\n\r\n      myChart.dispatchAction({\r\n        type: \"highlight\",\r\n        seriesIndex: 0,\r\n        dataIndex: nowIndex,\r\n      });\r\n      myChart.dispatchAction({\r\n        type: \"showTip\",\r\n        seriesIndex: 0,\r\n        dataIndex: nowIndex,\r\n      });\r\n      nowIndex += 1;\r\n      if (nowIndex === dataNum) {\r\n        nowIndex = 0;\r\n      }\r\n    };\r\n    setTimeout(() => {\r\n      showToolTips();\r\n    }, 2000)\r\n    \r\n    setInterval(() => {\r\n      showToolTips();\r\n    }, 1000 * 10);\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={map}\r\n        style={{\r\n          height: `${height}px`,\r\n          width: `${width}px`,\r\n          background: \"transparent\",\r\n          // background: \"red\"\r\n        }}\r\n      />\r\n      <div style={{ position: \"absolute\", top: `${height - 170}px`, right: \"161px\" }}>\r\n        <img src={southSeaImg} alt=\"南海\" width=\"72\" height=\"100\" />\r\n      </div>\r\n      <Pointer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WithContainer(Map);\r\n","export default __webpack_public_path__ + \"static/media/southSea.9a4bb11a.svg\";"],"sourceRoot":""}