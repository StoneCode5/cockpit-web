{"version":3,"sources":["components/DashBoard/Container/index.tsx","../node_modules/@ant-design/charts/es/plots/radialBar/index.js","components/Radial/index.tsx","components/DashBoard/withContainer.tsx"],"names":["Container","props","children","attr","id","x","y","w","h","deg","opacity","styles","width","height","left","top","transform","style","className","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","RadialBarChart","forwardRef","ref","chartRef","_a","loading","loadingTemplate","errorTemplate","rest","_b","useChart","G2plotRadialBar","chart","container","useEffect","getChart","current","useImperativeHandle","React","createElement","ErrorBoundary","ChartLoading","WithContainer","data","targetSum","premiumSum","config","padding","autoFit","xField","yField","maxAngle","radius","innerRadius","colorField","color","barBackground","stroke","fill","fillOpacity","yAxis","xAxis","toolTip","defaultData","name","value","Number","annotations","type","position","html","String","replace","fullConfig","WrappedComponent","ComponentConfig","cacheRepeatRequest","source","useState","componentData"],"mappings":"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","file":"static/js/27.bb96e494.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Attr {\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    deg: number;\r\n    opacity: number;\r\n}\r\n\r\ninterface Props {\r\n    attr: Attr\r\n    id: string\r\n}\r\n\r\nconst Container: React.FC<Props> = (props) => {\r\n  const {children, attr, id} = props;\r\n  const {x , y , w , h, deg, opacity} = attr\r\n\r\n  const styles = {\r\n      width: w || 0,\r\n      height: h || 0,\r\n      left: x || 0,\r\n      top: y ||0 ,\r\n      transform: `rotate(${deg || 0}deg)`,\r\n      opacity: opacity || 1,\r\n  }\r\n  \r\n  return <div style={styles} className=\"absolute\" data-id={id}>\r\n      {children}\r\n  </div>;\r\n};\r\n\r\nexport default Container;","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { RadialBar as G2plotRadialBar } from '@antv/g2plot';\nimport useChart from '../../hooks/useChart';\nimport { getChart } from '../../util';\nimport { ErrorBoundary } from '../../base';\nimport ChartLoading from '../../util/createLoading';\nvar RadialBarChart = forwardRef(function (props, ref) {\n    var chartRef = props.chartRef, _a = props.style, style = _a === void 0 ? {\n        height: 'inherit',\n    } : _a, className = props.className, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate, rest = __rest(props, [\"chartRef\", \"style\", \"className\", \"loading\", \"loadingTemplate\", \"errorTemplate\"]);\n    var _b = useChart(G2plotRadialBar, rest), chart = _b.chart, container = _b.container;\n    useEffect(function () {\n        getChart(chartRef, chart.current);\n    }, [chart.current]);\n    useImperativeHandle(ref, function () { return ({\n        getChart: function () { return chart.current; },\n    }); });\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n});\nexport default RadialBarChart;\n","import React from \"react\";\r\nimport { RadialBar } from \"@ant-design/charts\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\n\r\nconst RadialComponent: React.FC<any> = (props) => {\r\n  const defaultConfig = {\r\n    padding: 0,\r\n    autoFit: false,\r\n    xField: \"name\",\r\n    yField: \"value\",\r\n    maxAngle: 360,\r\n    radius: 1,\r\n    innerRadius: 0.75,\r\n    colorField: \"name\",\r\n    color: [\"#ff9e0d\", \"#4c87ff\"],\r\n    barBackground: {\r\n      style: {\r\n        stroke: \"transparent\",\r\n        fill: \"#fff\",\r\n        fillOpacity: 0.3,\r\n      },\r\n    },\r\n    yAxis: false,\r\n    xAxis: false,\r\n    toolTip: false,\r\n    // tooltip: {\r\n    //   itemTpl: `<li class=\"g2-tooltip-list-item\" style=\"min-width: 165px;display: flex;justify-content: space-between;\">\r\n    //                   <div style=\"color: #333;font-size: 14px;font-weight: 600;\"><span style=\"color: {color};\">●</span> {name}达成：</div>\r\n    //                   <div style=\"font-size: 14px;\">{value} 万</div>\r\n    //               </li> `,\r\n    //   formatter: (datum: any) => {\r\n    //     return {\r\n    //       name: datum.name,\r\n    //       value: datum.value\r\n    //         .toFixed()\r\n    //         .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\"),\r\n    //     };\r\n    //   },\r\n    //   showTitle: false,\r\n    // },\r\n  };\r\n  const {\r\n    data = { targetSum: 10000, premiumSum: 1000 },\r\n    config = defaultConfig,\r\n  } = props;\r\n  const defaultData = [\r\n    {\r\n      name: \"当前\",\r\n      value: Number(data.premiumSum) || 0,\r\n    },\r\n    {\r\n      name: \"目标\",\r\n      value: Number(data.targetSum) || 1,\r\n    },\r\n  ];\r\n  const annotations = [\r\n    {\r\n      type: \"html\",\r\n      position: [\"50%\", \"50%\"] as [string, string],\r\n      html: () => {\r\n        return `<div style=\"transform:translate(-50%,-50%);color:#ff9e0d;font-size: 22px;font-weight: 600;\">\r\n                ${String(data.premiumSum  || 0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}\r\n              </div>`;\r\n      },\r\n    },\r\n  ];\r\n  const fullConfig = {\r\n    ...config,\r\n    annotations: annotations,\r\n    data: defaultData,\r\n  };\r\n  return <RadialBar {...fullConfig} />;\r\n};\r\n\r\nexport default WithContainer(RadialComponent);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport request from \"../../utils/request\";\r\nimport { RequestThrottle } from \"./utils\";\r\n\r\ninterface Props {\r\n  config: DashBoard.Layer;\r\n  cacheRepeatRequest: boolean \r\n}\r\n\r\nexport function WithContainer(WrappedComponent: any) {\r\n  const ContainerFC: React.FC<Props> = (props) => {\r\n    const { config, cacheRepeatRequest } = props;\r\n    const {\r\n      config: ComponentConfig,\r\n      attr,\r\n      data,\r\n      data: { source },\r\n      id,\r\n    } = config;\r\n\r\n    const [componentData, setComponentData] = useState(source);\r\n    // useEffect(() => {\r\n    //   // 这一层去改变数据\r\n    //   const { autoUpdate, api = { url: \"\", method: \"get\", staleTime: 5 * 1000, handleRes: (res:any) => res } } = data;\r\n    //   const { url, method, staleTime, handleRes } = api;\r\n\r\n    //   const appendRequest = (RequestThrottle:any) => {\r\n    //     RequestThrottle.appendUrl(url);\r\n    //     request[method](url).then((res) => {\r\n    //       if (res.code === \"00000\") {\r\n    //         RequestThrottle.updateUrlRes(url, res);\r\n    //         const cData = handleRes? handleRes(res.data) : res.data\r\n    //         setComponentData(cData);\r\n    //       }\r\n    //     });\r\n    //   }\r\n\r\n    //   if (autoUpdate && typeof autoUpdate === \"number\") {\r\n    //     const id = setInterval(() => {\r\n    //       if (cacheRepeatRequest) {\r\n    //         const requestUrl = RequestThrottle.getUrlFromUrls(url);\r\n    //         // 有正在请求的相同的请求\r\n    //         if (requestUrl) {\r\n    //           //请求中\r\n    //           if (requestUrl.status === \"pendding\") {\r\n    //             RequestThrottle.subscribe(url, (res: any) => {\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             });\r\n    //           } else {\r\n    //             // 有请求成功的相同请求\r\n    //             const cha = new Date().getTime() - requestUrl.startTime;\r\n    //             // 该请求还未过有效期\r\n    //             if (cha >= staleTime) {\r\n    //               appendRequest(RequestThrottle)\r\n    //             } else {\r\n    //               // 过了有效期 重新发起请求\r\n    //               const { res } = requestUrl;\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             }\r\n    //           }\r\n    //         } else {\r\n    //           // 之前没有过相同的请求\r\n    //           appendRequest(RequestThrottle)\r\n    //         }\r\n    //       } else {\r\n    //         request[method](url).then((res) => {\r\n    //           if (res.code === \"00000\") {\r\n    //             const cData = handleRes? handleRes(res.data) : res.data\r\n    //             setComponentData(cData);\r\n    //           }\r\n    //         });\r\n    //       }\r\n    //     }, autoUpdate);\r\n\r\n    //     return () => {\r\n    //       clearInterval(id);\r\n    //     };\r\n    //   }\r\n    // }, []);\r\n\r\n    return (\r\n      <Container attr={attr} id={id}>\r\n        <WrappedComponent {...ComponentConfig} data={componentData} />\r\n      </Container>\r\n    );\r\n  };\r\n  return ContainerFC;\r\n}\r\n"],"sourceRoot":""}