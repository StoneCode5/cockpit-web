{"version":3,"sources":["components/DashBoard/Container/index.tsx","components/Loop/index.tsx","components/DashBoard/withContainer.tsx","../node_modules/@ant-design/charts/es/plots/ringProgress/index.js"],"names":["Container","props","children","attr","id","x","y","w","h","deg","opacity","styles","width","height","left","top","transform","style","className","configDefault","autoFit","percent","color","fill","fillOpacity","stroke","lineWidth","lineDash","strokeOpacity","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","cursor","radius","innerRadius","statistic","title","fontSize","lineHeight","content","customHtml","container","view","datum","data","WithContainer","undefined","config","WrappedComponent","ComponentConfig","cacheRepeatRequest","source","useState","componentData","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","RingProgressChart","forwardRef","ref","chartRef","_a","loading","loadingTemplate","errorTemplate","rest","_b","useChart","G2plotRingProgress","chart","useEffect","getChart","current","useImperativeHandle","React","createElement","ErrorBoundary","ChartLoading"],"mappings":"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","file":"static/js/15.1b3c484a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Attr {\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    deg: number;\r\n    opacity: number;\r\n}\r\n\r\ninterface Props {\r\n    attr: Attr\r\n    id: string\r\n}\r\n\r\nconst Container: React.FC<Props> = (props) => {\r\n  const {children, attr, id} = props;\r\n  const {x , y , w , h, deg, opacity} = attr\r\n\r\n  const styles = {\r\n      width: w || 0,\r\n      height: h || 0,\r\n      left: x || 0,\r\n      top: y ||0 ,\r\n      transform: `rotate(${deg || 0}deg)`,\r\n      opacity: opacity || 1,\r\n  }\r\n  \r\n  return <div style={styles} className=\"absolute\" data-id={id}>\r\n      {children}\r\n  </div>;\r\n};\r\n\r\nexport default Container;","import React from \"react\";\r\nimport { RingProgress } from \"@ant-design/charts\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\n\r\nconst dataDefault = 0;\r\nconst configDefault = {\r\n  height: 140,\r\n  width: 140,\r\n  autoFit: false,\r\n  percent: 0.65,\r\n  color: [\"l(0) 0:#FFCD1E 1:#FF9E0D\", \"rgba(255,255,255, 0.4)\"],\r\n  style: {\r\n    fill: \"red\",\r\n    fillOpacity: 0.5,\r\n    stroke: \"black\",\r\n    lineWidth: 1,\r\n    lineDash: [4, 5],\r\n    strokeOpacity: 0.7,\r\n    shadowColor: \"black\",\r\n    shadowBlur: 10,\r\n    shadowOffsetX: 5,\r\n    shadowOffsetY: 5,\r\n    cursor: \"pointer\",\r\n  },\r\n  radius: 1,\r\n  innerRadius: 0.7,\r\n  statistic: {\r\n    title: {\r\n      style: {\r\n        color: \"rgba(255,255,255, 0.4)\",\r\n        fontSize: \"12px\",\r\n        lineHeight: \"12px\",\r\n      },\r\n    },\r\n    content: {\r\n      style: {\r\n        color: \"#FF9E0D\",\r\n        fontSize: \"24px\",\r\n        lineHeight: \"24px\",\r\n      },\r\n      customHtml: (\r\n        container: HTMLElement,\r\n        view: any,\r\n        datum: any,\r\n        data: any\r\n      ) => {\r\n        return `<div>${\r\n          datum.percent * 100\r\n        }<span style=\"font-size:16px\">%<span></div>`;\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst LoopComponent: React.FC<any> = (props) => {\r\n  const percent = props.data === undefined ? dataDefault : props.data;\r\n  const config = props || configDefault;\r\n  return <RingProgress {...config} percent={percent} />;\r\n};\r\n\r\nexport default WithContainer(LoopComponent);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport request from \"../../utils/request\";\r\nimport { RequestThrottle } from \"./utils\";\r\n\r\ninterface Props {\r\n  config: DashBoard.Layer;\r\n  cacheRepeatRequest: boolean \r\n}\r\n\r\nexport function WithContainer(WrappedComponent: any) {\r\n  const ContainerFC: React.FC<Props> = (props) => {\r\n    const { config, cacheRepeatRequest } = props;\r\n    const {\r\n      config: ComponentConfig,\r\n      attr,\r\n      data,\r\n      data: { source },\r\n      id,\r\n    } = config;\r\n\r\n    const [componentData, setComponentData] = useState(source);\r\n    // useEffect(() => {\r\n    //   // 这一层去改变数据\r\n    //   const { autoUpdate, api = { url: \"\", method: \"get\", staleTime: 5 * 1000, handleRes: (res:any) => res } } = data;\r\n    //   const { url, method, staleTime, handleRes } = api;\r\n\r\n    //   const appendRequest = (RequestThrottle:any) => {\r\n    //     RequestThrottle.appendUrl(url);\r\n    //     request[method](url).then((res) => {\r\n    //       if (res.code === \"00000\") {\r\n    //         RequestThrottle.updateUrlRes(url, res);\r\n    //         const cData = handleRes? handleRes(res.data) : res.data\r\n    //         setComponentData(cData);\r\n    //       }\r\n    //     });\r\n    //   }\r\n\r\n    //   if (autoUpdate && typeof autoUpdate === \"number\") {\r\n    //     const id = setInterval(() => {\r\n    //       if (cacheRepeatRequest) {\r\n    //         const requestUrl = RequestThrottle.getUrlFromUrls(url);\r\n    //         // 有正在请求的相同的请求\r\n    //         if (requestUrl) {\r\n    //           //请求中\r\n    //           if (requestUrl.status === \"pendding\") {\r\n    //             RequestThrottle.subscribe(url, (res: any) => {\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             });\r\n    //           } else {\r\n    //             // 有请求成功的相同请求\r\n    //             const cha = new Date().getTime() - requestUrl.startTime;\r\n    //             // 该请求还未过有效期\r\n    //             if (cha >= staleTime) {\r\n    //               appendRequest(RequestThrottle)\r\n    //             } else {\r\n    //               // 过了有效期 重新发起请求\r\n    //               const { res } = requestUrl;\r\n    //               if (res.code === \"00000\") {\r\n    //                 const cData = handleRes? handleRes(res.data) : res.data\r\n    //                 setComponentData(cData);\r\n    //               }\r\n    //             }\r\n    //           }\r\n    //         } else {\r\n    //           // 之前没有过相同的请求\r\n    //           appendRequest(RequestThrottle)\r\n    //         }\r\n    //       } else {\r\n    //         request[method](url).then((res) => {\r\n    //           if (res.code === \"00000\") {\r\n    //             const cData = handleRes? handleRes(res.data) : res.data\r\n    //             setComponentData(cData);\r\n    //           }\r\n    //         });\r\n    //       }\r\n    //     }, autoUpdate);\r\n\r\n    //     return () => {\r\n    //       clearInterval(id);\r\n    //     };\r\n    //   }\r\n    // }, []);\r\n\r\n    return (\r\n      <Container attr={attr} id={id}>\r\n        <WrappedComponent {...ComponentConfig} data={componentData} />\r\n      </Container>\r\n    );\r\n  };\r\n  return ContainerFC;\r\n}\r\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { RingProgress as G2plotRingProgress, } from '@antv/g2plot';\nimport useChart from '../../hooks/useChart';\nimport { getChart } from '../../util';\nimport { ErrorBoundary } from '../../base';\nimport ChartLoading from '../../util/createLoading';\nvar RingProgressChart = forwardRef(function (props, ref) {\n    var chartRef = props.chartRef, _a = props.style, style = _a === void 0 ? {\n        height: 'inherit',\n    } : _a, className = props.className, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate, rest = __rest(props, [\"chartRef\", \"style\", \"className\", \"loading\", \"loadingTemplate\", \"errorTemplate\"]);\n    var _b = useChart(G2plotRingProgress, rest), chart = _b.chart, container = _b.container;\n    useEffect(function () {\n        getChart(chartRef, chart.current);\n    }, [chart.current]);\n    useImperativeHandle(ref, function () { return ({\n        getChart: function () { return chart.current; },\n    }); });\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n});\nexport default RingProgressChart;\n"],"sourceRoot":""}