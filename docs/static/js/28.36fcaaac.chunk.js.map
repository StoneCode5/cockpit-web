{"version":3,"sources":["components/DashBoard/Container/index.tsx","components/Rose/index.tsx","components/DashBoard/withContainer.tsx"],"names":["Container","props","children","attr","id","x","y","w","h","deg","opacity","styles","width","height","left","top","transform","style","className","WithContainer","data","value","name","colorList","textStyle","labelStyle","defaultOption","tooltip","series","type","radius","center","label","normal","color","fontsize","formatter","itemStyle","borderRadius","params","echarts","LinearGradient","offset","dataIndex","useEffect","element","document","getElementById","myChart","option","setOption","initChart","WrappedComponent","config","cacheRepeatRequest","ComponentConfig","source","useState","componentData","setComponentData","autoUpdate","api","url","method","staleTime","handleRes","res","appendRequest","RequestThrottle","appendUrl","request","then","code","updateUrlRes","cData","setInterval","requestUrl","getUrlFromUrls","status","subscribe","Date","getTime","startTime","clearInterval"],"mappings":"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","file":"static/js/28.36fcaaac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Attr {\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    deg: number;\r\n    opacity: number;\r\n}\r\n\r\ninterface Props {\r\n    attr: Attr\r\n    id: string\r\n}\r\n\r\nconst Container: React.FC<Props> = (props) => {\r\n  const {children, attr, id} = props;\r\n  const {x , y , w , h, deg, opacity} = attr\r\n\r\n  const styles = {\r\n      width: w || 0,\r\n      height: h || 0,\r\n      left: x || 0,\r\n      top: y ||0 ,\r\n      transform: `rotate(${deg || 0}deg)`,\r\n      opacity: opacity || 1,\r\n  }\r\n  \r\n  return <div style={styles} className=\"absolute\" data-id={id}>\r\n      {children}\r\n  </div>;\r\n};\r\n\r\nexport default Container;","import React, { useEffect } from \"react\";\r\nimport { WithContainer } from \"../DashBoard/withContainer\";\r\nimport * as echarts from \"echarts\";\r\nimport Big from 'big.js'\r\nconst DemoRose: React.FC<any> = (props) => {\r\n  const defaultData = [\r\n    { value: 40, name: \"直接业务\" },\r\n    { value: 38, name: \"个人代理\" },\r\n    { value: 32, name: \"专业代理\" },\r\n    { value: 30, name: \"网上业务\" },\r\n    { value: 28, name: \"兼业代理\" },\r\n    { value: 26, name: \"经纪人一类\" },\r\n    { value: 22, name: \"经纪人二类\" },\r\n  ];\r\n  const defaultColorList = [\r\n    [\"#ffc53d\", \"#faad14\"],\r\n    [\"#ff4d4f\", \"#f5222d\"],\r\n    [\"#ffa940\", \"#fa8c16\"],\r\n    [\"#ffec3d\", \"#fadb14\"],\r\n    [\"#bae637\", \"#a0d911\"],\r\n    [\"#73d13d\", \"#52c41a\"],\r\n    [\"#40a9ff\", \"#1890ff\"],\r\n    [\"#597ef7\", \"#2f54eb\"],\r\n    [\"#f759ab\", \"#eb2f96\"],\r\n    [\"#9254de\", \"#722ed1\"],\r\n  ];\r\n  const {\r\n    data = defaultData,\r\n    colorList = defaultColorList,\r\n    height = 200,\r\n    width = 200,\r\n    textStyle = {\r\n      color: \"rgba(255,255,255, 0.4)\",\r\n      fontsize: \"20px\",\r\n    },\r\n    labelStyle = {\r\n      color: \"#EFEFF1\",\r\n      fontsize: \"18px\",\r\n    },\r\n  } = props;\r\n  const defaultOption = {\r\n    // legend: {\r\n    //   bottom: 0,\r\n    //   padding: [20, 20, 25, 20],\r\n    //   itemWidth: 14,\r\n    //   textStyle: textStyle,\r\n    //   itemGap: 20,\r\n    //   formatter: function (name: any) {\r\n    //     let target = 0;\r\n    //     for (var i = 0, l = data.length; i < l; i++) {\r\n    //       if (data[i].name === name) target = data[i].value;\r\n    //     }\r\n    //     return (\r\n    //       name + \"  \" + String(target).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\r\n    //     );\r\n    //   },\r\n    // },\r\n\r\n    // legend: {\r\n    //   orient: \"vertical\",\r\n    //   left: \"left\",\r\n    //   top: \"middle\",\r\n    //   textStyle: labelStyle,\r\n    //   formatter: (name:any) => {\r\n    //     console.log('pieData', data)\r\n    //     let sum = 0\r\n    //     for (let i = 0; i < data.length; i++) {\r\n    //       const item = data[i];\r\n    //       sum = Big(sum).plus(item.value).toNumber()\r\n    //     }\r\n    //     const currentItem = data.find((item:any) => item.name === name)\r\n        \r\n    //     if (currentItem) {\r\n    //       const ratio = Big(currentItem.value).div(sum).times(100).toFixed(2)\r\n    //       return `${name}  ${currentItem.value}(万)  ${ratio}%`\r\n    //     }\r\n        \r\n    //   },\r\n    // },\r\n    // itemStyle: {\r\n    //   borderRadius: 4,\r\n    // },\r\n    tooltip: false,\r\n    series: [\r\n      {\r\n        type: \"pie\",\r\n        // right: '-40%',\r\n        radius: [\"30%\", \"60%\"],\r\n        center: [\"50%\", \"50%\"],\r\n        // labelLine: {\r\n        //   show: false,\r\n        // },\r\n        label: {\r\n          normal: {\r\n            textStyle: labelStyle,\r\n            formatter: \"{b}\\n{c}(万)  {d}%\",\r\n          },\r\n        },\r\n        // roseType: \"area\",\r\n        // label: {\r\n        //   normal: {\r\n        //     textStyle: labelStyle,\r\n        //     formatter: \"{b}\\n{c}（万）\\n{d}%\",\r\n        //   },\r\n        // },\r\n        itemStyle: {\r\n          borderRadius: 4,\r\n          normal: {\r\n            color: function (params: any) {\r\n              return new echarts.graphic.LinearGradient(1, 0, 0, 0, [\r\n                {\r\n                  offset: 0,\r\n                  color: colorList[params.dataIndex][0],\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: colorList[params.dataIndex][1],\r\n                },\r\n              ]);\r\n            },\r\n          },\r\n        },\r\n        data: data,\r\n      },\r\n    ],\r\n  };\r\n  let initChart = () => {\r\n    let element = document.getElementById(\"main1\");\r\n    let myChart = echarts.init(element as HTMLDivElement);\r\n    let option = defaultOption;\r\n    myChart.setOption(option);\r\n  };\r\n  useEffect(() => {\r\n    initChart();\r\n  });\r\n  return <div id={\"main1\"} style={{ height: height, width: width }} />;\r\n};\r\n\r\nexport default WithContainer(DemoRose);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport request from \"../../utils/request\";\r\nimport { RequestThrottle } from \"./utils\";\r\n\r\ninterface Props {\r\n  config: DashBoard.Layer;\r\n  cacheRepeatRequest: boolean \r\n}\r\n\r\nexport function WithContainer(WrappedComponent: any) {\r\n  const ContainerFC: React.FC<Props> = (props) => {\r\n    const { config, cacheRepeatRequest } = props;\r\n    const {\r\n      config: ComponentConfig,\r\n      attr,\r\n      data,\r\n      data: { source },\r\n      id,\r\n    } = config;\r\n\r\n    const [componentData, setComponentData] = useState(source);\r\n    useEffect(() => {\r\n      // 这一层去改变数据\r\n      const { autoUpdate, api = { url: \"\", method: \"get\", staleTime: 5 * 1000, handleRes: (res:any) => res } } = data;\r\n      const { url, method, staleTime, handleRes } = api;\r\n\r\n      const appendRequest = (RequestThrottle:any) => {\r\n        RequestThrottle.appendUrl(url);\r\n        request[method](url).then((res) => {\r\n          if (res.code === \"00000\") {\r\n            RequestThrottle.updateUrlRes(url, res);\r\n            const cData = handleRes? handleRes(res.data) : res.data\r\n            setComponentData(cData);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (autoUpdate && typeof autoUpdate === \"number\") {\r\n        const id = setInterval(() => {\r\n          if (cacheRepeatRequest) {\r\n            const requestUrl = RequestThrottle.getUrlFromUrls(url);\r\n            // 有正在请求的相同的请求\r\n            if (requestUrl) {\r\n              //请求中\r\n              if (requestUrl.status === \"pendding\") {\r\n                RequestThrottle.subscribe(url, (res: any) => {\r\n                  if (res.code === \"00000\") {\r\n                    const cData = handleRes? handleRes(res.data) : res.data\r\n                    setComponentData(cData);\r\n                  }\r\n                });\r\n              } else {\r\n                // 有请求成功的相同请求\r\n                const cha = new Date().getTime() - requestUrl.startTime;\r\n                // 该请求还未过有效期\r\n                if (cha >= staleTime) {\r\n                  appendRequest(RequestThrottle)\r\n                } else {\r\n                  // 过了有效期 重新发起请求\r\n                  const { res } = requestUrl;\r\n                  if (res.code === \"00000\") {\r\n                    const cData = handleRes? handleRes(res.data) : res.data\r\n                    setComponentData(cData);\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              // 之前没有过相同的请求\r\n              appendRequest(RequestThrottle)\r\n            }\r\n          } else {\r\n            request[method](url).then((res) => {\r\n              if (res.code === \"00000\") {\r\n                const cData = handleRes? handleRes(res.data) : res.data\r\n                setComponentData(cData);\r\n              }\r\n            });\r\n          }\r\n        }, autoUpdate);\r\n\r\n        return () => {\r\n          clearInterval(id);\r\n        };\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <Container attr={attr} id={id}>\r\n        <WrappedComponent {...ComponentConfig} data={componentData} />\r\n      </Container>\r\n    );\r\n  };\r\n  return ContainerFC;\r\n}\r\n"],"sourceRoot":""}