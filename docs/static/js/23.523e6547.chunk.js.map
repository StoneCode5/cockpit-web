{"version":3,"sources":["components/DashBoard/Container/index.tsx","../node_modules/@ant-design/charts/es/plots/dualAxes/index.js","components/IntervalAndLine/index.tsx","components/DashBoard/withContainer.tsx"],"names":["Container","props","children","attr","id","x","y","w","h","deg","opacity","styles","width","height","left","top","transform","style","className","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","DualAxesChart","forwardRef","ref","chartRef","_a","loading","loadingTemplate","errorTemplate","rest","_b","useChart","G2plotDualAxes","chart","container","useEffect","getChart","current","useImperativeHandle","React","createElement","ErrorBoundary","ChartLoading","WithContainer","defaultConfig","xField","yField","geometryOptions","geometry","isGroup","isStack","seriesField","groupField","lineStyle","lineWidth","theme","colors10","config","data","label","intervalField","lineField","config_","intervalData","lineData","result","maxBy","result2","maxValue","Math","max","realValue","value","yAxisMaxValue","parseInt","yAxis","min","lineMaxData","percent","ceil","WrappedComponent","cacheRepeatRequest","ComponentConfig","source","useState","componentData","setComponentData","autoUpdate","api","url","method","staleTime","handleRes","res","appendRequest","RequestThrottle","appendUrl","request","then","code","updateUrlRes","cData","setInterval","requestUrl","getUrlFromUrls","status","subscribe","Date","getTime","startTime","clearInterval"],"mappings":"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","file":"static/js/23.523e6547.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Attr {\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    deg: number;\r\n    opacity: number;\r\n}\r\n\r\ninterface Props {\r\n    attr: Attr\r\n    id: string\r\n}\r\n\r\nconst Container: React.FC<Props> = (props) => {\r\n  const {children, attr, id} = props;\r\n  const {x , y , w , h, deg, opacity} = attr\r\n\r\n  const styles = {\r\n      width: w || 0,\r\n      height: h || 0,\r\n      left: x || 0,\r\n      top: y ||0 ,\r\n      transform: `rotate(${deg || 0}deg)`,\r\n      opacity: opacity || 1,\r\n  }\r\n  \r\n  return <div style={styles} className=\"absolute\" data-id={id}>\r\n      {children}\r\n  </div>;\r\n};\r\n\r\nexport default Container;","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { DualAxes as G2plotDualAxes } from '@antv/g2plot';\nimport useChart from '../../hooks/useChart';\nimport { getChart } from '../../util';\nimport { ErrorBoundary } from '../../base';\nimport ChartLoading from '../../util/createLoading';\nvar DualAxesChart = forwardRef(function (props, ref) {\n    var chartRef = props.chartRef, _a = props.style, style = _a === void 0 ? {\n        height: 'inherit',\n    } : _a, className = props.className, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate, rest = __rest(props, [\"chartRef\", \"style\", \"className\", \"loading\", \"loadingTemplate\", \"errorTemplate\"]);\n    // @ts-ignore annotations 类型特殊\n    var _b = useChart(G2plotDualAxes, rest), chart = _b.chart, container = _b.container;\n    useEffect(function () {\n        getChart(chartRef, chart.current);\n    }, [chart.current]);\n    useImperativeHandle(ref, function () { return ({\n        getChart: function () { return chart.current; },\n    }); });\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n});\nexport default DualAxesChart;\n","import React from 'react';\r\nimport { DualAxes } from '@ant-design/charts';\r\nimport { WithContainer } from '../DashBoard/withContainer';\r\nimport { cloneDeep, maxBy } from \"lodash\";\r\n\r\nexport interface dataItem {\r\n  label: string\r\n  intervalField: number\r\n  lineField: number\r\n}\r\n\r\ninterface Props {\r\n  config: any\r\n  data: dataItem[]\r\n}\r\n\r\nconst IntervalAndLine: React.FC<Props> = (props) => {\r\n\r\n  const defaultData = [\r\n    {\r\n      label: '2019-03',\r\n      intervalField: 350,\r\n      lineField: 800,\r\n    },\r\n    {\r\n      label: '2019-04',\r\n      intervalField: 900,\r\n      lineField: 600,\r\n    },\r\n    {\r\n      label: '2019-05',\r\n      intervalField: 300,\r\n      lineField: 400,\r\n    },\r\n    {\r\n      label: '2019-06',\r\n      intervalField: 450,\r\n      lineField: 380,\r\n    },\r\n    {\r\n      label: '2019-07',\r\n      intervalField: 470,\r\n      lineField: 220,\r\n    },\r\n  ];\r\n  const defaultConfig = {\r\n    xField: 'label',\r\n    yField: ['intervalField', 'lineField'],\r\n    geometryOptions: [\r\n      {\r\n        geometry: 'column',\r\n        isGroup: true,\r\n        isStack: true,\r\n        seriesField: 'type',\r\n        groupField: 'label',\r\n      },\r\n      {\r\n        geometry: 'line',\r\n        lineStyle: { lineWidth: 2 },\r\n      },\r\n    ],\r\n    theme: {\r\n      colors10: ['l(90) 0:#43E2FF 1:#44A5FF', 'l(90) 0:#FF7E11 1:#F99A13']\r\n    }\r\n  };\r\n  const { config = defaultConfig, data = defaultData } = props\r\n  const config_ = {\r\n    ...defaultConfig,\r\n    ...config\r\n  }\r\n  const intervalData = data[0]\r\n  const lineData = data[1]\r\n  const result = maxBy(intervalData, 'realValue')\r\n  const result2 = maxBy(intervalData, 'value')\r\n  let maxValue = Math.max(result.realValue, result2.value);\r\n  const yAxisMaxValue = parseInt(`${maxValue * 18 / 9}`, 10)\r\n  config_.yAxis.value.max = yAxisMaxValue\r\n  config_.yAxis.value.min = 0\r\n\r\n  const lineMaxData = maxBy(lineData, 'percent')\r\n  if (lineMaxData && lineMaxData.percent) {\r\n    const getMaxValue = (value: number) => {\r\n      if (value > 0.1) {\r\n        return Math.ceil(value * 10) / 10\r\n      }\r\n      return Math.ceil(value * 100) / 100\r\n    }\r\n    config_.yAxis.percent.max = getMaxValue(lineMaxData.percent)\r\n\r\n    config_.yAxis.percent.min = 0\r\n  }\r\n\r\n  return <DualAxes {...config_} data={data} />;\r\n};\r\n\r\nexport default WithContainer(IntervalAndLine);","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport request from \"../../utils/request\";\r\nimport { RequestThrottle } from \"./utils\";\r\n\r\ninterface Props {\r\n  config: DashBoard.Layer;\r\n  cacheRepeatRequest: boolean \r\n}\r\n\r\nexport function WithContainer(WrappedComponent: any) {\r\n  const ContainerFC: React.FC<Props> = (props) => {\r\n    const { config, cacheRepeatRequest } = props;\r\n    const {\r\n      config: ComponentConfig,\r\n      attr,\r\n      data,\r\n      data: { source },\r\n      id,\r\n    } = config;\r\n\r\n    const [componentData, setComponentData] = useState(source);\r\n    useEffect(() => {\r\n      // 这一层去改变数据\r\n      const { autoUpdate, api = { url: \"\", method: \"get\", staleTime: 5 * 1000, handleRes: (res:any) => res } } = data;\r\n      const { url, method, staleTime, handleRes } = api;\r\n\r\n      const appendRequest = (RequestThrottle:any) => {\r\n        RequestThrottle.appendUrl(url);\r\n        request[method](url).then((res) => {\r\n          if (res.code === \"00000\") {\r\n            RequestThrottle.updateUrlRes(url, res);\r\n            const cData = handleRes? handleRes(res.data) : res.data\r\n            setComponentData(cData);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (autoUpdate && typeof autoUpdate === \"number\") {\r\n        const id = setInterval(() => {\r\n          if (cacheRepeatRequest) {\r\n            const requestUrl = RequestThrottle.getUrlFromUrls(url);\r\n            // 有正在请求的相同的请求\r\n            if (requestUrl) {\r\n              //请求中\r\n              if (requestUrl.status === \"pendding\") {\r\n                RequestThrottle.subscribe(url, (res: any) => {\r\n                  if (res.code === \"00000\") {\r\n                    const cData = handleRes? handleRes(res.data) : res.data\r\n                    setComponentData(cData);\r\n                  }\r\n                });\r\n              } else {\r\n                // 有请求成功的相同请求\r\n                const cha = new Date().getTime() - requestUrl.startTime;\r\n                // 该请求还未过有效期\r\n                if (cha >= staleTime) {\r\n                  appendRequest(RequestThrottle)\r\n                } else {\r\n                  // 过了有效期 重新发起请求\r\n                  const { res } = requestUrl;\r\n                  if (res.code === \"00000\") {\r\n                    const cData = handleRes? handleRes(res.data) : res.data\r\n                    setComponentData(cData);\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              // 之前没有过相同的请求\r\n              appendRequest(RequestThrottle)\r\n            }\r\n          } else {\r\n            request[method](url).then((res) => {\r\n              if (res.code === \"00000\") {\r\n                const cData = handleRes? handleRes(res.data) : res.data\r\n                setComponentData(cData);\r\n              }\r\n            });\r\n          }\r\n        }, autoUpdate);\r\n\r\n        return () => {\r\n          clearInterval(id);\r\n        };\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <Container attr={attr} id={id}>\r\n        <WrappedComponent {...ComponentConfig} data={componentData} />\r\n      </Container>\r\n    );\r\n  };\r\n  return ContainerFC;\r\n}\r\n"],"sourceRoot":""}